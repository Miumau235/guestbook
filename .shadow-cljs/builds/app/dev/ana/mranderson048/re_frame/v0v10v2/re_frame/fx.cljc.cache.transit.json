["^ ","~:output",["^ ","~:js","goog.provide('mranderson048.re_frame.v0v10v2.re_frame.fx');\ngoog.require('cljs.core');\ngoog.require('mranderson048.re_frame.v0v10v2.re_frame.router');\ngoog.require('mranderson048.re_frame.v0v10v2.re_frame.db');\ngoog.require('mranderson048.re_frame.v0v10v2.re_frame.interceptor');\ngoog.require('mranderson048.re_frame.v0v10v2.re_frame.interop');\ngoog.require('mranderson048.re_frame.v0v10v2.re_frame.events');\ngoog.require('mranderson048.re_frame.v0v10v2.re_frame.registrar');\ngoog.require('mranderson048.re_frame.v0v10v2.re_frame.loggers');\nmranderson048.re_frame.v0v10v2.re_frame.fx.kind = new cljs.core.Keyword(null,\"fx\",\"fx\",-1237829572);\nif(cljs.core.truth_((mranderson048.re_frame.v0v10v2.re_frame.registrar.kinds.cljs$core$IFn$_invoke$arity$1 ? mranderson048.re_frame.v0v10v2.re_frame.registrar.kinds.cljs$core$IFn$_invoke$arity$1(mranderson048.re_frame.v0v10v2.re_frame.fx.kind) : mranderson048.re_frame.v0v10v2.re_frame.registrar.kinds.call(null,mranderson048.re_frame.v0v10v2.re_frame.fx.kind)))){\n} else {\nthrow (new Error(\"Assert failed: (mranderson048.re-frame.v0v10v2.re-frame.registrar/kinds kind)\"));\n}\n/**\n * Register the given effect `handler` for the given `id`.\n * \n *   `id` is keyword, often namespaced.\n *   `handler` is a side-effecting function which takes a single argument and whose return\n *   value is ignored.\n * \n *   Example Use\n *   -----------\n * \n *   First, registration ... associate `:effect2` with a handler.\n * \n *   (reg-fx\n *   :effect2\n *   (fn [value]\n *      ... do something side-effect-y))\n * \n *   Then, later, if an event handler were to return this effects map ...\n * \n *   {...\n * :effect2  [1 2]}\n * \n * ... then the `handler` `fn` we registered previously, using `reg-fx`, will be\n * called with an argument of `[1 2]`.\n */\nmranderson048.re_frame.v0v10v2.re_frame.fx.reg_fx = (function mranderson048$re_frame$v0v10v2$re_frame$fx$reg_fx(id,handler){\nreturn mranderson048.re_frame.v0v10v2.re_frame.registrar.register_handler(mranderson048.re_frame.v0v10v2.re_frame.fx.kind,id,handler);\n});\n/**\n * An interceptor whose `:after` actions the contents of `:effects`. As a result,\n *   this interceptor is Domino 3.\n * \n *   This interceptor is silently added (by reg-event-db etc) to the front of\n *   interceptor chains for all events.\n * \n *   For each key in `:effects` (a map), it calls the registered `effects handler`\n *   (see `reg-fx` for registration of effect handlers).\n * \n *   So, if `:effects` was:\n *    {:dispatch  [:hello 42]\n *     :db        {...}\n *     :undo      \"set flag\"}\n * \n *   it will call the registered effect handlers for each of the map's keys:\n *   `:dispatch`, `:undo` and `:db`. When calling each handler, provides the map\n *   value for that key - so in the example above the effect handler for :dispatch\n *   will be given one arg `[:hello 42]`.\n * \n *   You cannot rely on the ordering in which effects are executed.\n */\nmranderson048.re_frame.v0v10v2.re_frame.fx.do_fx = mranderson048.re_frame.v0v10v2.re_frame.interceptor.__GT_interceptor.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([new cljs.core.Keyword(null,\"id\",\"id\",-1388402092),new cljs.core.Keyword(null,\"do-fx\",\"do-fx\",1194163050),new cljs.core.Keyword(null,\"after\",\"after\",594996914),(function mranderson048$re_frame$v0v10v2$re_frame$fx$do_fx_after(context){\nvar seq__61095 = cljs.core.seq(new cljs.core.Keyword(null,\"effects\",\"effects\",-282369292).cljs$core$IFn$_invoke$arity$1(context));\nvar chunk__61096 = null;\nvar count__61097 = (0);\nvar i__61098 = (0);\nwhile(true){\nif((i__61098 < count__61097)){\nvar vec__61111 = chunk__61096.cljs$core$IIndexed$_nth$arity$2(null,i__61098);\nvar effect_key = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__61111,(0),null);\nvar effect_value = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__61111,(1),null);\nvar temp__5733__auto___61185 = mranderson048.re_frame.v0v10v2.re_frame.registrar.get_handler.cljs$core$IFn$_invoke$arity$3(mranderson048.re_frame.v0v10v2.re_frame.fx.kind,effect_key,false);\nif(cljs.core.truth_(temp__5733__auto___61185)){\nvar effect_fn_61186 = temp__5733__auto___61185;\n(effect_fn_61186.cljs$core$IFn$_invoke$arity$1 ? effect_fn_61186.cljs$core$IFn$_invoke$arity$1(effect_value) : effect_fn_61186.call(null,effect_value));\n} else {\nmranderson048.re_frame.v0v10v2.re_frame.loggers.console.cljs$core$IFn$_invoke$arity$variadic(new cljs.core.Keyword(null,\"error\",\"error\",-978969032),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([\"re-frame: no handler registered for effect: \\\"\",effect_key,\"\\\". Ignoring.\"], 0));\n}\n\n\nvar G__61190 = seq__61095;\nvar G__61191 = chunk__61096;\nvar G__61192 = count__61097;\nvar G__61193 = (i__61098 + (1));\nseq__61095 = G__61190;\nchunk__61096 = G__61191;\ncount__61097 = G__61192;\ni__61098 = G__61193;\ncontinue;\n} else {\nvar temp__5735__auto__ = cljs.core.seq(seq__61095);\nif(temp__5735__auto__){\nvar seq__61095__$1 = temp__5735__auto__;\nif(cljs.core.chunked_seq_QMARK_(seq__61095__$1)){\nvar c__4550__auto__ = cljs.core.chunk_first(seq__61095__$1);\nvar G__61200 = cljs.core.chunk_rest(seq__61095__$1);\nvar G__61201 = c__4550__auto__;\nvar G__61202 = cljs.core.count(c__4550__auto__);\nvar G__61203 = (0);\nseq__61095 = G__61200;\nchunk__61096 = G__61201;\ncount__61097 = G__61202;\ni__61098 = G__61203;\ncontinue;\n} else {\nvar vec__61119 = cljs.core.first(seq__61095__$1);\nvar effect_key = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__61119,(0),null);\nvar effect_value = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__61119,(1),null);\nvar temp__5733__auto___61218 = mranderson048.re_frame.v0v10v2.re_frame.registrar.get_handler.cljs$core$IFn$_invoke$arity$3(mranderson048.re_frame.v0v10v2.re_frame.fx.kind,effect_key,false);\nif(cljs.core.truth_(temp__5733__auto___61218)){\nvar effect_fn_61219 = temp__5733__auto___61218;\n(effect_fn_61219.cljs$core$IFn$_invoke$arity$1 ? effect_fn_61219.cljs$core$IFn$_invoke$arity$1(effect_value) : effect_fn_61219.call(null,effect_value));\n} else {\nmranderson048.re_frame.v0v10v2.re_frame.loggers.console.cljs$core$IFn$_invoke$arity$variadic(new cljs.core.Keyword(null,\"error\",\"error\",-978969032),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([\"re-frame: no handler registered for effect: \\\"\",effect_key,\"\\\". Ignoring.\"], 0));\n}\n\n\nvar G__61227 = cljs.core.next(seq__61095__$1);\nvar G__61228 = null;\nvar G__61229 = (0);\nvar G__61230 = (0);\nseq__61095 = G__61227;\nchunk__61096 = G__61228;\ncount__61097 = G__61229;\ni__61098 = G__61230;\ncontinue;\n}\n} else {\nreturn null;\n}\n}\nbreak;\n}\n})], 0));\nmranderson048.re_frame.v0v10v2.re_frame.fx.reg_fx(new cljs.core.Keyword(null,\"dispatch-later\",\"dispatch-later\",291951390),(function (value){\nvar seq__61125 = cljs.core.seq(value);\nvar chunk__61126 = null;\nvar count__61127 = (0);\nvar i__61128 = (0);\nwhile(true){\nif((i__61128 < count__61127)){\nvar map__61141 = chunk__61126.cljs$core$IIndexed$_nth$arity$2(null,i__61128);\nvar map__61141__$1 = (((((!((map__61141 == null))))?(((((map__61141.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__61141.cljs$core$ISeq$))))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__61141):map__61141);\nvar effect = map__61141__$1;\nvar ms = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__61141__$1,new cljs.core.Keyword(null,\"ms\",\"ms\",-1152709733));\nvar dispatch = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__61141__$1,new cljs.core.Keyword(null,\"dispatch\",\"dispatch\",1319337009));\nif(((cljs.core.empty_QMARK_(dispatch)) || ((!(typeof ms === 'number'))))){\nmranderson048.re_frame.v0v10v2.re_frame.loggers.console.cljs$core$IFn$_invoke$arity$variadic(new cljs.core.Keyword(null,\"error\",\"error\",-978969032),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([\"re-frame: ignoring bad :dispatch-later value:\",effect], 0));\n} else {\nmranderson048.re_frame.v0v10v2.re_frame.interop.set_timeout_BANG_(((function (seq__61125,chunk__61126,count__61127,i__61128,map__61141,map__61141__$1,effect,ms,dispatch){\nreturn (function (){\nreturn mranderson048.re_frame.v0v10v2.re_frame.router.dispatch(dispatch);\n});})(seq__61125,chunk__61126,count__61127,i__61128,map__61141,map__61141__$1,effect,ms,dispatch))\n,ms);\n}\n\n\nvar G__61240 = seq__61125;\nvar G__61241 = chunk__61126;\nvar G__61242 = count__61127;\nvar G__61243 = (i__61128 + (1));\nseq__61125 = G__61240;\nchunk__61126 = G__61241;\ncount__61127 = G__61242;\ni__61128 = G__61243;\ncontinue;\n} else {\nvar temp__5735__auto__ = cljs.core.seq(seq__61125);\nif(temp__5735__auto__){\nvar seq__61125__$1 = temp__5735__auto__;\nif(cljs.core.chunked_seq_QMARK_(seq__61125__$1)){\nvar c__4550__auto__ = cljs.core.chunk_first(seq__61125__$1);\nvar G__61250 = cljs.core.chunk_rest(seq__61125__$1);\nvar G__61251 = c__4550__auto__;\nvar G__61252 = cljs.core.count(c__4550__auto__);\nvar G__61253 = (0);\nseq__61125 = G__61250;\nchunk__61126 = G__61251;\ncount__61127 = G__61252;\ni__61128 = G__61253;\ncontinue;\n} else {\nvar map__61148 = cljs.core.first(seq__61125__$1);\nvar map__61148__$1 = (((((!((map__61148 == null))))?(((((map__61148.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__61148.cljs$core$ISeq$))))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__61148):map__61148);\nvar effect = map__61148__$1;\nvar ms = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__61148__$1,new cljs.core.Keyword(null,\"ms\",\"ms\",-1152709733));\nvar dispatch = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__61148__$1,new cljs.core.Keyword(null,\"dispatch\",\"dispatch\",1319337009));\nif(((cljs.core.empty_QMARK_(dispatch)) || ((!(typeof ms === 'number'))))){\nmranderson048.re_frame.v0v10v2.re_frame.loggers.console.cljs$core$IFn$_invoke$arity$variadic(new cljs.core.Keyword(null,\"error\",\"error\",-978969032),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([\"re-frame: ignoring bad :dispatch-later value:\",effect], 0));\n} else {\nmranderson048.re_frame.v0v10v2.re_frame.interop.set_timeout_BANG_(((function (seq__61125,chunk__61126,count__61127,i__61128,map__61148,map__61148__$1,effect,ms,dispatch,seq__61125__$1,temp__5735__auto__){\nreturn (function (){\nreturn mranderson048.re_frame.v0v10v2.re_frame.router.dispatch(dispatch);\n});})(seq__61125,chunk__61126,count__61127,i__61128,map__61148,map__61148__$1,effect,ms,dispatch,seq__61125__$1,temp__5735__auto__))\n,ms);\n}\n\n\nvar G__61255 = cljs.core.next(seq__61125__$1);\nvar G__61256 = null;\nvar G__61257 = (0);\nvar G__61258 = (0);\nseq__61125 = G__61255;\nchunk__61126 = G__61256;\ncount__61127 = G__61257;\ni__61128 = G__61258;\ncontinue;\n}\n} else {\nreturn null;\n}\n}\nbreak;\n}\n}));\nmranderson048.re_frame.v0v10v2.re_frame.fx.reg_fx(new cljs.core.Keyword(null,\"dispatch\",\"dispatch\",1319337009),(function (value){\nif((!(cljs.core.vector_QMARK_(value)))){\nreturn mranderson048.re_frame.v0v10v2.re_frame.loggers.console.cljs$core$IFn$_invoke$arity$variadic(new cljs.core.Keyword(null,\"error\",\"error\",-978969032),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([\"re-frame: ignoring bad :dispatch value. Expected a vector, but got:\",value], 0));\n} else {\nreturn mranderson048.re_frame.v0v10v2.re_frame.router.dispatch(value);\n}\n}));\nmranderson048.re_frame.v0v10v2.re_frame.fx.reg_fx(new cljs.core.Keyword(null,\"dispatch-n\",\"dispatch-n\",-504469236),(function (value){\nif((!(cljs.core.sequential_QMARK_(value)))){\nreturn mranderson048.re_frame.v0v10v2.re_frame.loggers.console.cljs$core$IFn$_invoke$arity$variadic(new cljs.core.Keyword(null,\"error\",\"error\",-978969032),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([\"re-frame: ignoring bad :dispatch-n value. Expected a collection, got got:\",value], 0));\n} else {\nvar seq__61156 = cljs.core.seq(cljs.core.remove.cljs$core$IFn$_invoke$arity$2(cljs.core.nil_QMARK_,value));\nvar chunk__61157 = null;\nvar count__61158 = (0);\nvar i__61159 = (0);\nwhile(true){\nif((i__61159 < count__61158)){\nvar event = chunk__61157.cljs$core$IIndexed$_nth$arity$2(null,i__61159);\nmranderson048.re_frame.v0v10v2.re_frame.router.dispatch(event);\n\n\nvar G__61276 = seq__61156;\nvar G__61277 = chunk__61157;\nvar G__61278 = count__61158;\nvar G__61279 = (i__61159 + (1));\nseq__61156 = G__61276;\nchunk__61157 = G__61277;\ncount__61158 = G__61278;\ni__61159 = G__61279;\ncontinue;\n} else {\nvar temp__5735__auto__ = cljs.core.seq(seq__61156);\nif(temp__5735__auto__){\nvar seq__61156__$1 = temp__5735__auto__;\nif(cljs.core.chunked_seq_QMARK_(seq__61156__$1)){\nvar c__4550__auto__ = cljs.core.chunk_first(seq__61156__$1);\nvar G__61281 = cljs.core.chunk_rest(seq__61156__$1);\nvar G__61282 = c__4550__auto__;\nvar G__61283 = cljs.core.count(c__4550__auto__);\nvar G__61284 = (0);\nseq__61156 = G__61281;\nchunk__61157 = G__61282;\ncount__61158 = G__61283;\ni__61159 = G__61284;\ncontinue;\n} else {\nvar event = cljs.core.first(seq__61156__$1);\nmranderson048.re_frame.v0v10v2.re_frame.router.dispatch(event);\n\n\nvar G__61285 = cljs.core.next(seq__61156__$1);\nvar G__61286 = null;\nvar G__61287 = (0);\nvar G__61288 = (0);\nseq__61156 = G__61285;\nchunk__61157 = G__61286;\ncount__61158 = G__61287;\ni__61159 = G__61288;\ncontinue;\n}\n} else {\nreturn null;\n}\n}\nbreak;\n}\n}\n}));\nmranderson048.re_frame.v0v10v2.re_frame.fx.reg_fx(new cljs.core.Keyword(null,\"deregister-event-handler\",\"deregister-event-handler\",-1096518994),(function (value){\nvar clear_event = cljs.core.partial.cljs$core$IFn$_invoke$arity$2(mranderson048.re_frame.v0v10v2.re_frame.registrar.clear_handlers,mranderson048.re_frame.v0v10v2.re_frame.events.kind);\nif(cljs.core.sequential_QMARK_(value)){\nvar seq__61167 = cljs.core.seq(value);\nvar chunk__61168 = null;\nvar count__61169 = (0);\nvar i__61170 = (0);\nwhile(true){\nif((i__61170 < count__61169)){\nvar event = chunk__61168.cljs$core$IIndexed$_nth$arity$2(null,i__61170);\n(clear_event.cljs$core$IFn$_invoke$arity$1 ? clear_event.cljs$core$IFn$_invoke$arity$1(event) : clear_event.call(null,event));\n\n\nvar G__61296 = seq__61167;\nvar G__61297 = chunk__61168;\nvar G__61298 = count__61169;\nvar G__61299 = (i__61170 + (1));\nseq__61167 = G__61296;\nchunk__61168 = G__61297;\ncount__61169 = G__61298;\ni__61170 = G__61299;\ncontinue;\n} else {\nvar temp__5735__auto__ = cljs.core.seq(seq__61167);\nif(temp__5735__auto__){\nvar seq__61167__$1 = temp__5735__auto__;\nif(cljs.core.chunked_seq_QMARK_(seq__61167__$1)){\nvar c__4550__auto__ = cljs.core.chunk_first(seq__61167__$1);\nvar G__61301 = cljs.core.chunk_rest(seq__61167__$1);\nvar G__61302 = c__4550__auto__;\nvar G__61303 = cljs.core.count(c__4550__auto__);\nvar G__61304 = (0);\nseq__61167 = G__61301;\nchunk__61168 = G__61302;\ncount__61169 = G__61303;\ni__61170 = G__61304;\ncontinue;\n} else {\nvar event = cljs.core.first(seq__61167__$1);\n(clear_event.cljs$core$IFn$_invoke$arity$1 ? clear_event.cljs$core$IFn$_invoke$arity$1(event) : clear_event.call(null,event));\n\n\nvar G__61307 = cljs.core.next(seq__61167__$1);\nvar G__61308 = null;\nvar G__61309 = (0);\nvar G__61310 = (0);\nseq__61167 = G__61307;\nchunk__61168 = G__61308;\ncount__61169 = G__61309;\ni__61170 = G__61310;\ncontinue;\n}\n} else {\nreturn null;\n}\n}\nbreak;\n}\n} else {\nreturn (clear_event.cljs$core$IFn$_invoke$arity$1 ? clear_event.cljs$core$IFn$_invoke$arity$1(value) : clear_event.call(null,value));\n}\n}));\nmranderson048.re_frame.v0v10v2.re_frame.fx.reg_fx(new cljs.core.Keyword(null,\"db\",\"db\",993250759),(function (value){\nif((!((cljs.core.deref(mranderson048.re_frame.v0v10v2.re_frame.db.app_db) === value)))){\nreturn cljs.core.reset_BANG_(mranderson048.re_frame.v0v10v2.re_frame.db.app_db,value);\n} else {\nreturn null;\n}\n}));\n","~:ns-info",["^ ","~:rename-macros",null,"~:renames",["^ "],"~:meta",["^ ","~:file","mranderson048/re_frame/v0v10v2/re_frame/fx.cljc","~:line",1,"~:column",5,"~:end-line",1,"~:end-column",47],"~:ns-aliases",["^ ","~$cljs.loader","~$shadow.loader","~$react","~$module$node_modules$react$index","~$create-react-class","~$module$node_modules$create_react_class$index","~$react-dom","~$module$node_modules$react_dom$index"],"~:use-macros",null,"~:excludes",["~#set",[]],"~:name","~$mranderson048.re-frame.v0v10v2.re-frame.fx","~:op","~:ns","~:imports",null,"~:requires",["^ ","~$mranderson048.re-frame.v0v10v2.re-frame.loggers","^M","~$cljs.core","^N","~$goog","^O","~$mranderson048.re-frame.v0v10v2.re-frame.db","^P","~$router","~$mranderson048.re-frame.v0v10v2.re-frame.router","~$mranderson048.re-frame.v0v10v2.re-frame.interceptor","^S","~$mranderson048.re-frame.v0v10v2.re-frame.registrar","^T","~$events","~$mranderson048.re-frame.v0v10v2.re-frame.events","^R","^R","^V","^V","~$mranderson048.re-frame.v0v10v2.re-frame.interop","^W"],"~:seen",["^F",["~:require"]],"~:uses",["^ ","~$app-db","^P","~$->interceptor","^S","~$set-timeout!","^W","~$get-handler","^T","~$clear-handlers","^T","~$register-handler","^T","~$console","^M"],"~:require-macros",["^ ","^N","^N"],"~:form",["~#list",["~$ns","^H",["^18",["^Y",["^R","~:as","^Q"],["^P","~:refer",["^["]],["^S","^1;",["^10"]],["^W","^1;",["^11"]],["^V","^1:","^U"],["^T","^1;",["^12","^13","^14"]],["^M","^1;",["^15"]]]]]],"~:flags",["^ ","^Y",["^F",[]]],"~:js-deps",["^ "],"~:deps",["^O","^N","^R","^P","^S","^W","^V","^T","^M"]],"^J","^H","~:resource-id",["~:shadow.build.classpath/resource","mranderson048/re_frame/v0v10v2/re_frame/fx.cljc"],"~:compiled-at",1596107166418,"~:resource-name","mranderson048/re_frame/v0v10v2/re_frame/fx.cljc","~:warnings",[],"~:source","(ns mranderson048.re-frame.v0v10v2.re-frame.fx\n  (:require\n    [mranderson048.re-frame.v0v10v2.re-frame.router      :as router]\n    [mranderson048.re-frame.v0v10v2.re-frame.db          :refer [app-db]]\n    [mranderson048.re-frame.v0v10v2.re-frame.interceptor :refer [->interceptor]]\n    [mranderson048.re-frame.v0v10v2.re-frame.interop     :refer [set-timeout!]]\n    [mranderson048.re-frame.v0v10v2.re-frame.events      :as events]\n    [mranderson048.re-frame.v0v10v2.re-frame.registrar   :refer [get-handler clear-handlers register-handler]]\n    [mranderson048.re-frame.v0v10v2.re-frame.loggers     :refer [console]]))\n\n\n;; -- Registration ------------------------------------------------------------\n\n(def kind :fx)\n(assert (mranderson048.re-frame.v0v10v2.re-frame.registrar/kinds kind))\n\n(defn reg-fx\n  \"Register the given effect `handler` for the given `id`.\n\n  `id` is keyword, often namespaced.\n  `handler` is a side-effecting function which takes a single argument and whose return\n  value is ignored.\n\n  Example Use\n  -----------\n\n  First, registration ... associate `:effect2` with a handler.\n\n  (reg-fx\n     :effect2\n     (fn [value]\n        ... do something side-effect-y))\n\n  Then, later, if an event handler were to return this effects map ...\n\n  {...\n   :effect2  [1 2]}\n\n   ... then the `handler` `fn` we registered previously, using `reg-fx`, will be\n   called with an argument of `[1 2]`.\"\n  [id handler]\n  (register-handler kind id handler))\n\n;; -- Interceptor -------------------------------------------------------------\n\n(def do-fx\n  \"An interceptor whose `:after` actions the contents of `:effects`. As a result,\n  this interceptor is Domino 3.\n\n  This interceptor is silently added (by reg-event-db etc) to the front of\n  interceptor chains for all events.\n\n  For each key in `:effects` (a map), it calls the registered `effects handler`\n  (see `reg-fx` for registration of effect handlers).\n\n  So, if `:effects` was:\n      {:dispatch  [:hello 42]\n       :db        {...}\n       :undo      \\\"set flag\\\"}\n\n  it will call the registered effect handlers for each of the map's keys:\n  `:dispatch`, `:undo` and `:db`. When calling each handler, provides the map\n  value for that key - so in the example above the effect handler for :dispatch\n  will be given one arg `[:hello 42]`.\n\n  You cannot rely on the ordering in which effects are executed.\"\n  (->interceptor\n    :id :do-fx\n    :after (fn do-fx-after\n             [context]\n             (doseq [[effect-key effect-value] (:effects context)]\n               (if-let [effect-fn (get-handler kind effect-key false)]\n                 (effect-fn effect-value)\n                 (console :error \"re-frame: no handler registered for effect: \\\"\" effect-key \"\\\". Ignoring.\"))))))\n\n;; -- Builtin Effect Handlers  ------------------------------------------------\n\n;; :dispatch-later\n;;\n;; `dispatch` one or more events after given delays. Expects a collection\n;; of maps with two keys:  :`ms` and `:dispatch`\n;;\n;; usage:\n;;\n;;    {:dispatch-later [{:ms 200 :dispatch [:event-id \"param\"]}    ;;  in 200ms do this: (dispatch [:event-id \"param\"])\n;;                      {:ms 100 :dispatch [:also :this :in :100ms]}]}\n;;\n(reg-fx\n  :dispatch-later\n  (fn [value]\n    (doseq [{:keys [ms dispatch] :as effect} value]\n        (if (or (empty? dispatch) (not (number? ms)))\n          (console :error \"re-frame: ignoring bad :dispatch-later value:\" effect)\n          (set-timeout! #(router/dispatch dispatch) ms)))))\n\n\n;; :dispatch\n;;\n;; `dispatch` one event. Excepts a single vector.\n;;\n;; usage:\n;;   {:dispatch [:event-id \"param\"] }\n\n(reg-fx\n  :dispatch\n  (fn [value]\n    (if-not (vector? value)\n      (console :error \"re-frame: ignoring bad :dispatch value. Expected a vector, but got:\" value)\n      (router/dispatch value))))\n\n\n;; :dispatch-n\n;;\n;; `dispatch` more than one event. Expects a list or vector of events. Something for which\n;; sequential? returns true.\n;;\n;; usage:\n;;   {:dispatch-n (list [:do :all] [:three :of] [:these])}\n;;\n;; Note: nil events are ignored which means events can be added\n;; conditionally:\n;;    {:dispatch-n (list (when (> 3 5) [:conditioned-out])\n;;                       [:another-one])}\n;;\n(reg-fx\n  :dispatch-n\n  (fn [value]\n    (if-not (sequential? value)\n      (console :error \"re-frame: ignoring bad :dispatch-n value. Expected a collection, got got:\" value)\n      (doseq [event (remove nil? value)] (router/dispatch event)))))\n\n\n;; :deregister-event-handler\n;;\n;; removes a previously registered event handler. Expects either a single id (\n;; typically a namespaced keyword), or a seq of ids.\n;;\n;; usage:\n;;   {:deregister-event-handler :my-id)}\n;; or:\n;;   {:deregister-event-handler [:one-id :another-id]}\n;;\n(reg-fx\n  :deregister-event-handler\n  (fn [value]\n    (let [clear-event (partial clear-handlers events/kind)]\n      (if (sequential? value)\n        (doseq [event value] (clear-event event))\n        (clear-event value)))))\n\n\n;; :db\n;;\n;; reset! app-db with a new value. `value` is expected to be a map.\n;;\n;; usage:\n;;   {:db  {:key1 value1 key2 value2}}\n;;\n(reg-fx\n  :db\n  (fn [value]\n    (if-not (identical? @app-db value)\n      (reset! app-db value))))\n\n","~:reader-features",["^F",["~:cljs"]],"~:cljc",true,"~:source-map-compact",["^ ","mappings","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","names",["mranderson048.re-frame.v0v10v2.re-frame.fx/kind","js/Error","mranderson048.re-frame.v0v10v2.re-frame.registrar/kinds","mranderson048.re-frame.v0v10v2.re-frame.fx/reg-fx","id","handler","mranderson048.re-frame.v0v10v2.re-frame.registrar/register-handler","mranderson048.re-frame.v0v10v2.re-frame.fx/do-fx","mranderson048.re_frame.v0v10v2.re_frame.interceptor.__GT_interceptor.cljs$core$IFn$_invoke$arity$variadic","context","seq__61095","cljs.core/seq","chunk__61096","count__61097","i__61098","vec__61111","cljs.core.nth.cljs$core$IFn$_invoke$arity$3","temp__5735__auto__","cljs.core/chunked-seq?","c__4550__auto__","cljs.core/chunk-first","cljs.core/chunk-rest","cljs.core/count","vec__61119","cljs.core/first","cljs.core/next","effect-key","effect-value","temp__5733__auto__","effect-fn","mranderson048.re_frame.v0v10v2.re_frame.registrar.get_handler.cljs$core$IFn$_invoke$arity$3","mranderson048.re_frame.v0v10v2.re_frame.loggers.console.cljs$core$IFn$_invoke$arity$variadic","value","seq__61125","chunk__61126","count__61127","i__61128","map__61141","cljs.core/PROTOCOL_SENTINEL","cljs.core.apply.cljs$core$IFn$_invoke$arity$2","cljs.core/hash-map","cljs.core.get.cljs$core$IFn$_invoke$arity$2","map__61148","ms","dispatch","effect","cljs.core/empty?","mranderson048.re-frame.v0v10v2.re-frame.interop/set-timeout!","mranderson048.re-frame.v0v10v2.re-frame.router/dispatch","cljs.core/vector?","cljs.core/sequential?","seq__61156","chunk__61157","count__61158","i__61159","event","cljs.core.remove.cljs$core$IFn$_invoke$arity$2","cljs.core/nil?","clear-event","cljs.core.partial.cljs$core$IFn$_invoke$arity$2","mranderson048.re-frame.v0v10v2.re-frame.registrar/clear-handlers","mranderson048.re-frame.v0v10v2.re-frame.events/kind","seq__61167","chunk__61168","count__61169","i__61170","cljs.core/deref","mranderson048.re-frame.v0v10v2.re-frame.db/app-db","cljs.core/reset!"]]],"~:cache-keys",["~#cmap",[["~:shadow.build.npm/resource","node_modules/react-dom/index.js"],[1596092746000,1596092746000,499162500000,"~:shadow.build.compiler/resolve",["^ ","~:require-id",null,"~:deps-ids",["^F",[]],"~:deps-syms",["~$shadow.js","~$module$node_modules$react_dom$cjs$react_dom_production_min","~$module$node_modules$react_dom$cjs$react_dom_development","~$module$node_modules$process$browser"]]],["^1@","goog/dom/tagname.js"],[1596092743000,"^1N",["^ ","^1O",null,"^1P",["^F",[]],"^1Q",["^O","~$goog.dom.HtmlElement"]]],["^1@","mranderson048/re_frame/v0v10v2/re_frame/loggers.cljc"],[1596106403000,"^1N",["^ ","^1O",null,"^1P",["^F",[]],"^1Q",["^O","^N","~$clojure.set"]]],["~:macro","^N"],[1595322624000],["^1X","~$mranderson048.reagent.v0v8v0.reagent.core"],[1596106403000],["^1@","mranderson048/re_frame/v0v10v2/re_frame/fx.cljc"],[1596106403000,"^1N",["^ ","^1O",null,"^1P",["^F",[]],"^1Q",["^O","^N","^R","^P","^S","^W","^V","^T","^M"]]],["^1@","goog/math/math.js"],[1596092743000,"^1N",["^ ","^1O",null,"^1P",["^F",[]],"^1Q",["^O","~$goog.array","~$goog.asserts"]]],["^1@","goog/labs/useragent/browser.js"],[1596092743000,"^1N",["^ ","^1O",null,"^1P",["^F",[]],"^1Q",["^O","^1Z","~$goog.labs.userAgent.util","~$goog.object","~$goog.string.internal"]]],["^1@","mranderson048/reagent/v0v8v0/reagent/core.cljs"],[1596106403000,"^1N",["^ ","^1O",null,"^1P",["^F",[]],"^1Q",["^O","^N","^?","~$mranderson048.reagent.v0v8v0.reagent.impl.template","~$mranderson048.reagent.v0v8v0.reagent.impl.component","~$mranderson048.reagent.v0v8v0.reagent.impl.util","~$mranderson048.reagent.v0v8v0.reagent.impl.batching","~$mranderson048.reagent.v0v8v0.reagent.ratom","~$mranderson048.reagent.v0v8v0.reagent.debug","~$mranderson048.reagent.v0v8v0.reagent.interop","~$mranderson048.reagent.v0v8v0.reagent.dom"]]],["^1@","goog/array/array.js"],[1596092743000,"^1N",["^ ","^1O",null,"^1P",["^F",[]],"^1Q",["^O","^1["]]],["^1M","node_modules/prop-types/checkPropTypes.js"],[1596092746000,1596092746000,1549836454000,"^1N",["^ ","^1O",null,"^1P",["^F",[]],"^1Q",["^1R","~$module$node_modules$prop_types$lib$ReactPropTypesSecret","^1U"]]],["^1X","~$net.cgrand.macrovich"],[1552641581000],["^1M","node_modules/fbjs/lib/emptyFunction.js"],[1596092746000,1596092746000,1528785402000,"^1N",["^ ","^1O",null,"^1P",["^F",[]],"^1Q",["^1R"]]],["^1@","goog/debug/error.js"],[1596092743000,"^1N",["^ ","^1O",null,"^1P",["^F",[]],"^1Q",["^O"]]],["^1@","mranderson048/reagent/v0v8v0/reagent/dom.cljs"],[1596106403000,"^1N",["^ ","^1O",null,"^1P",["^F",[]],"^1Q",["^O","^N","^C","^25","^23","^26","^27","^28","^29"]]],["^1@","mranderson048/reagent/v0v8v0/reagent/impl/component.cljs"],[1596106403000,"^1N",["^ ","^1O",null,"^1P",["^F",[]],"^1Q",["^O","^N","^A","^?","^25","^26","^27","^29","^28"]]],["^1M","node_modules/fbjs/lib/emptyObject.js"],[1596092746000,1596092746000,1528785402000,"^1N",["^ ","^1O",null,"^1P",["^F",[]],"^1Q",["^1R","^1U"]]],["^1@","goog/dom/nodetype.js"],[1596092743000,"^1N",["^ ","^1O",null,"^1P",["^F",[]],"^1Q",["^O"]]],["^1M","node_modules/scheduler/cjs/scheduler.development.js"],[1596092746000,1596092746000,499162500000,"^1N",["^ ","^1O",null,"^1P",["^F",[]],"^1Q",["^1R","^1U"]]],["^1M","node_modules/scheduler/cjs/scheduler.production.min.js"],[1596092746000,1596092746000,499162500000,"^1N",["^ ","^1O",null,"^1P",["^F",[]],"^1Q",["^1R"]]],["^1M","node_modules/scheduler/cjs/scheduler-tracing.production.min.js"],[1596092746000,1596092746000,499162500000,"^1N",["^ ","^1O",null,"^1P",["^F",[]],"^1Q",["^1R"]]],["^1M","node_modules/create-react-class/factory.js"],[1596092746000,1596092746000,1517346959000,"^1N",["^ ","^1O",null,"^1P",["^F",[]],"^1Q",["^1R","~$module$node_modules$object_assign$index","~$module$node_modules$fbjs$lib$emptyObject","~$module$node_modules$fbjs$lib$invariant","~$module$node_modules$fbjs$lib$warning","^1U"]]],["^1M","node_modules/react/index.js"],[1596092746000,1596092746000,499162500000,"^1N",["^ ","^1O",null,"^1P",["^F",[]],"^1Q",["^1R","~$module$node_modules$react$cjs$react_production_min","~$module$node_modules$react$cjs$react_development","^1U"]]],["^1@","shadow/js.js"],[1596092746000,"^1N",["^ ","^1O",null,"^1P",["^F",[]],"^1Q",["^O"]]],["^1@","goog/object/object.js"],[1596092743000,"^1N",["^ ","^1O",null,"^1P",["^F",[]],"^1Q",["^O"]]],["^1M","node_modules/react-dom/cjs/react-dom.production.min.js"],[1596092746000,1596092746000,499162500000,"^1N",["^ ","^1O",null,"^1P",["^F",[]],"^1Q",["^1R","^?","^2=","~$module$node_modules$scheduler$index"]]],"~:SHADOW-TIMESTAMP",[1596092746000,1595322624000],["^1M","node_modules/react/cjs/react.development.js"],[1596092746000,1596092746000,499162500000,"^1N",["^ ","^1O",null,"^1P",["^F",[]],"^1Q",["^1R","^2=","~$module$node_modules$prop_types$checkPropTypes","^1U"]]],["^1X","^29"],[1596106403000],["^1@","goog/math/long.js"],[1596092743000,"^1N",["^ ","^1O",null,"^1P",["^F",[]],"^1Q",["^O","^1[","~$goog.reflect"]]],["^1@","mranderson048/reagent/v0v8v0/reagent/impl/batching.cljs"],[1596106403000,"^1N",["^ ","^1O",null,"^1P",["^F",[]],"^1Q",["^O","^N","^28","^29","^25","~$clojure.string"]]],["^1@","goog/string/internal.js"],[1596092743000,"^1N",["^ ","^1O",null,"^1P",["^F",[]],"^1Q",["^O"]]],["^1M","node_modules/scheduler/cjs/scheduler-tracing.development.js"],[1596092746000,1596092746000,499162500000,"^1N",["^ ","^1O",null,"^1P",["^F",[]],"^1Q",["^1R","^1U"]]],["^1M","node_modules/fbjs/lib/warning.js"],[1596092746000,1596092746000,1528785401000,"^1N",["^ ","^1O",null,"^1P",["^F",[]],"^1Q",["^1R","~$module$node_modules$fbjs$lib$emptyFunction","^1U"]]],["^1@","goog/functions/functions.js"],[1596092743000,"^1N",["^ ","^1O",null,"^1P",["^F",[]],"^1Q",["^O"]]],["^1@","clojure/walk.cljs"],[1595322624000,"^1N",["^ ","^1O",null,"^1P",["^F",[]],"^1Q",["^O","^N"]]],["^1X","~$mranderson048.re-frame.v0v10v2.re-frame.trace"],[1596106403000],["^1@","goog/structs/map.js"],[1596092743000,"^1N",["^ ","^1O",null,"^1P",["^F",[]],"^1Q",["^O","~$goog.iter.Iterator","~$goog.iter.StopIteration"]]],["^1@","mranderson048/re_frame/v0v10v2/re_frame/router.cljc"],[1596106403000,"^1N",["^ ","^1O",null,"^1P",["^F",[]],"^1Q",["^O","^N","^V","^W","^M","^2I"]]],["^1M","node_modules/scheduler/index.js"],[1596092746000,1596092746000,499162500000,"^1N",["^ ","^1O",null,"^1P",["^F",[]],"^1Q",["^1R","~$module$node_modules$scheduler$cjs$scheduler_production_min","~$module$node_modules$scheduler$cjs$scheduler_development","^1U"]]],["^1@","goog/labs/useragent/engine.js"],[1596092743000,"^1N",["^ ","^1O",null,"^1P",["^F",[]],"^1Q",["^O","^1Z","^20","~$goog.string"]]],["^1X","^27"],[1596106403000],["^1@","goog/asserts/asserts.js"],[1596092743000,"^1N",["^ ","^1O",null,"^1P",["^F",[]],"^1Q",["^O","~$goog.debug.Error","~$goog.dom.NodeType"]]],["^1@","goog/uri/uri.js"],[1596092743000,"^1N",["^ ","^1O",null,"^1P",["^F",[]],"^1Q",["^O","^1Z","^1[","^2N","~$goog.structs","~$goog.structs.Map","~$goog.uri.utils","~$goog.uri.utils.ComponentIndex","~$goog.uri.utils.StandardQueryParam"]]],["^1@","mranderson048/reagent/v0v8v0/reagent/ratom.cljs"],[1596106403000,"^1N",["^ ","^1O",null,"^1P",["^F",[]],"^1Q",["^O","^N","^25","^28","^26","^1W"]]],["^1@","mranderson048/reagent/v0v8v0/reagent/interop.cljs"],[1596106403000,"^1N",["^ ","^1O",null,"^1P",["^F",[]],"^1Q",["^O","^N"]]],["^1@","mranderson048/re_frame/v0v10v2/re_frame/registrar.cljc"],[1596106403000,"^1N",["^ ","^1O",null,"^1P",["^F",[]],"^1Q",["^O","^N","^W","^M"]]],["^1M","node_modules/object-assign/index.js"],[1596092746000,1596092746000,1484580833000,"^1N",["^ ","^1O",null,"^1P",["^F",[]],"^1Q",["^1R"]]],["^1@","mranderson048/re_frame/v0v10v2/re_frame/events.cljc"],[1596106403000,"^1N",["^ ","^1O",null,"^1P",["^F",[]],"^1Q",["^O","^N","^P","~$mranderson048.re-frame.v0v10v2.re-frame.utils","^W","^T","^M","^S","^2I"]]],["^1M","node_modules/process/browser.js"],[1596092746000,1596092746000,1493209628000,"^1N",["^ ","^1O",null,"^1P",["^F",[]],"^1Q",["^1R"]]],["^1@","goog/base.js"],[1596092743000,"^1N",["^ ","^1O",null,"^1P",["^F",[]],"^1Q",[]]],["^1@","goog/structs/structs.js"],[1596092743000,"^1N",["^ ","^1O",null,"^1P",["^F",[]],"^1Q",["^O","^1Z","^21"]]],["^1@","clojure/string.cljs"],[1595322624000,"^1N",["^ ","^1O",null,"^1P",["^F",[]],"^1Q",["^O","^N","^2N","~$goog.string.StringBuffer"]]],["^1M","node_modules/create-react-class/index.js"],[1596092746000,1596092746000,1517346956000,"^1N",["^ ","^1O",null,"^1P",["^F",[]],"^1Q",["^1R","^?","~$module$node_modules$create_react_class$factory"]]],["^1@","mranderson048/re_frame/v0v10v2/re_frame/interceptor.cljc"],[1596106403000,"^1N",["^ ","^1O",null,"^1P",["^F",[]],"^1Q",["^O","^N","^M","^W","^1W"]]],["^1M","node_modules/react/cjs/react.production.min.js"],[1596092746000,1596092746000,499162500000,"^1N",["^ ","^1O",null,"^1P",["^F",[]],"^1Q",["^1R","^2="]]],["^1@","goog/debug/entrypointregistry.js"],[1596092743000,"^1N",["^ ","^1O",null,"^1P",["^F",[]],"^1Q",["^O","^1["]]],["^1@","goog/string/string.js"],[1596092743000,"^1N",["^ ","^1O",null,"^1P",["^F",[]],"^1Q",["^O","^22"]]],["^1@","mranderson048/reagent/v0v8v0/reagent/impl/template.cljs"],[1596106403000,"^1N",["^ ","^1O",null,"^1P",["^F",[]],"^1Q",["^O","^N","^?","^2G","~$clojure.walk","^25","^24","^26","^27","^29","^28"]]],["^1@","mranderson048/reagent/v0v8v0/reagent/impl/util.cljs"],[1596106403000,"^1N",["^ ","^1O",null,"^1P",["^F",[]],"^1Q",["^O","^N","^28","^29","^2G"]]],["^1@","goog/reflect/reflect.js"],[1596092743000,"^1N",["^ ","^1O",null,"^1P",["^F",[]],"^1Q",["^O"]]],["^1@","goog/labs/useragent/util.js"],[1596092743000,"^1N",["^ ","^1O",null,"^1P",["^F",[]],"^1Q",["^O","^22"]]],["^1@","mranderson048/re_frame/v0v10v2/re_frame/trace.cljc"],[1596106403000,"^1N",["^ ","^1O",null,"^1P",["^F",[]],"^1Q",["^O","^N","^W","^M"]]],["^1@","goog/string/stringbuffer.js"],[1596092743000,"^1N",["^ ","^1O",null,"^1P",["^F",[]],"^1Q",["^O"]]],["^1@","goog/iter/iter.js"],[1596092743000,"^1N",["^ ","^1O",null,"^1P",["^F",[]],"^1Q",["^O","^1Z","^1[","~$goog.functions","~$goog.math"]]],["^1@","goog/async/nexttick.js"],[1596092743000,"^1N",["^ ","^1O",null,"^1P",["^F",[]],"^1Q",["^O","~$goog.debug.entryPointRegistry","~$goog.dom.TagName","^2Z","~$goog.labs.userAgent.browser","~$goog.labs.userAgent.engine"]]],["^1M","node_modules/prop-types/lib/ReactPropTypesSecret.js"],[1596092746000,1596092746000,1549571078000,"^1N",["^ ","^1O",null,"^1P",["^F",[]],"^1Q",["^1R"]]],["^1@","goog/dom/htmlelement.js"],[1596092743000,"^1N",["^ ","^1O",null,"^1P",["^F",[]],"^1Q",["^O"]]],["^1@","cljs/core.cljs"],[1595322624000,"^1N",["^ ","^1O",null,"^1P",["^F",[]],"^1Q",["~$goog.math.Long","~$goog.math.Integer","^2N","^21","^1Z","~$goog.Uri","^2W"]]],["^1@","goog/math/integer.js"],[1596092743000,"^1N",["^ ","^1O",null,"^1P",["^F",[]],"^1Q",["^O"]]],["^1M","node_modules/scheduler/tracing.js"],[1596092746000,1596092746000,499162500000,"^1N",["^ ","^1O",null,"^1P",["^F",[]],"^1Q",["^1R","~$module$node_modules$scheduler$cjs$scheduler_tracing_production_min","~$module$node_modules$scheduler$cjs$scheduler_tracing_development","^1U"]]],["^1@","mranderson048/reagent/v0v8v0/reagent/debug.cljs"],[1596106403000,"^1N",["^ ","^1O",null,"^1P",["^F",[]],"^1Q",["^O","^N"]]],["^1M","node_modules/react-dom/cjs/react-dom.development.js"],[1596092746000,1596092746000,499162500000,"^1N",["^ ","^1O",null,"^1P",["^F",[]],"^1Q",["^1R","^?","^2=","^2C","^2E","~$module$node_modules$scheduler$tracing","^1U"]]],["^1@","clojure/set.cljs"],[1595322624000,"^1N",["^ ","^1O",null,"^1P",["^F",[]],"^1Q",["^O","^N"]]],["^1@","goog/uri/utils.js"],[1596092743000,"^1N",["^ ","^1O",null,"^1P",["^F",[]],"^1Q",["^O","^1Z","^1[","^2N"]]],["^1@","mranderson048/re_frame/v0v10v2/re_frame/interop.cljs"],[1596106403000,"^1N",["^ ","^1O",null,"^1P",["^F",[]],"^1Q",["^O","^N","~$goog.async.nextTick","^1Y","^27"]]],["^1@","mranderson048/re_frame/v0v10v2/re_frame/utils.cljc"],[1596106403000,"^1N",["^ ","^1O",null,"^1P",["^F",[]],"^1Q",["^O","^N","^M"]]],["^1@","mranderson048/re_frame/v0v10v2/re_frame/db.cljc"],[1596106403000,"^1N",["^ ","^1O",null,"^1P",["^F",[]],"^1Q",["^O","^N","^W"]]],["^1M","node_modules/fbjs/lib/invariant.js"],[1596092746000,1596092746000,1528785400000,"^1N",["^ ","^1O",null,"^1P",["^F",[]],"^1Q",["^1R","^1U"]]],["^1X","^28"],[1596106403000]]],"~:analyzer",["^ ","^3",null,"^4",["^ "],"^5",["^ ","^6","mranderson048/re_frame/v0v10v2/re_frame/fx.cljc","^7",1,"^8",5,"^9",1,"^:",47],"^;",["^ ","^<","^=","^>","^?","^@","^A","^B","^C"],"^D",null,"^E",["^F",[]],"^G","^H","^K",null,"^L",["^ ","^M","^M","^N","^N","^O","^O","^P","^P","^Q","^R","^S","^S","^T","^T","^U","^V","^R","^R","^V","^V","^W","^W"],"^X",["^F",["^Y"]],"~:shadow/js-access-global",["^F",["Error"]],"^Z",["^ ","^[","^P","^10","^S","^11","^W","^12","^T","^13","^T","^14","^T","^15","^M"],"~:defs",["^ ","~$kind",["^ ","^G","~$mranderson048.re-frame.v0v10v2.re-frame.fx/kind","^6","mranderson048/re_frame/v0v10v2/re_frame/fx.cljc","^7",14,"^8",1,"^9",14,"^:",10,"^5",["^ ","^6","mranderson048/re_frame/v0v10v2/re_frame/fx.cljc","^7",14,"^8",6,"^9",14,"^:",10],"~:tag","~$cljs.core/Keyword"],"~$reg-fx",["^ ","~:protocol-inline",null,"^5",["^ ","^6","mranderson048/re_frame/v0v10v2/re_frame/fx.cljc","^7",17,"^8",7,"^9",17,"^:",13,"~:arglists",["^18",["~$quote",["^18",[["~$id","~$handler"]]]]],"~:doc","Register the given effect `handler` for the given `id`.\n\n  `id` is keyword, often namespaced.\n  `handler` is a side-effecting function which takes a single argument and whose return\n  value is ignored.\n\n  Example Use\n  -----------\n\n  First, registration ... associate `:effect2` with a handler.\n\n  (reg-fx\n     :effect2\n     (fn [value]\n        ... do something side-effect-y))\n\n  Then, later, if an event handler were to return this effects map ...\n\n  {...\n   :effect2  [1 2]}\n\n   ... then the `handler` `fn` we registered previously, using `reg-fx`, will be\n   called with an argument of `[1 2]`."],"^G","~$mranderson048.re-frame.v0v10v2.re-frame.fx/reg-fx","^6","mranderson048/re_frame/v0v10v2/re_frame/fx.cljc","^:",13,"~:method-params",["^18",[["^3F","^3G"]]],"~:protocol-impl",null,"~:arglists-meta",["^18",[null,null]],"^8",1,"~:variadic?",false,"^7",17,"~:ret-tag","~$any","^9",17,"~:max-fixed-arity",2,"~:fn-var",true,"^3D",["^18",["^3E",["^18",[["^3F","^3G"]]]]],"^3H","Register the given effect `handler` for the given `id`.\n\n  `id` is keyword, often namespaced.\n  `handler` is a side-effecting function which takes a single argument and whose return\n  value is ignored.\n\n  Example Use\n  -----------\n\n  First, registration ... associate `:effect2` with a handler.\n\n  (reg-fx\n     :effect2\n     (fn [value]\n        ... do something side-effect-y))\n\n  Then, later, if an event handler were to return this effects map ...\n\n  {...\n   :effect2  [1 2]}\n\n   ... then the `handler` `fn` we registered previously, using `reg-fx`, will be\n   called with an argument of `[1 2]`."],"~$do-fx",["^ ","^5",["^ ","^6","mranderson048/re_frame/v0v10v2/re_frame/fx.cljc","^7",46,"^8",6,"^9",46,"^:",11],"^G","~$mranderson048.re-frame.v0v10v2.re-frame.fx/do-fx","^6","mranderson048/re_frame/v0v10v2/re_frame/fx.cljc","^:",11,"^8",1,"^7",46,"^9",46,"^3@","~$cljs.core/IMap","^3H","An interceptor whose `:after` actions the contents of `:effects`. As a result,\n  this interceptor is Domino 3.\n\n  This interceptor is silently added (by reg-event-db etc) to the front of\n  interceptor chains for all events.\n\n  For each key in `:effects` (a map), it calls the registered `effects handler`\n  (see `reg-fx` for registration of effect handlers).\n\n  So, if `:effects` was:\n      {:dispatch  [:hello 42]\n       :db        {...}\n       :undo      \"set flag\"}\n\n  it will call the registered effect handlers for each of the map's keys:\n  `:dispatch`, `:undo` and `:db`. When calling each handler, provides the map\n  value for that key - so in the example above the effect handler for :dispatch\n  will be given one arg `[:hello 42]`.\n\n  You cannot rely on the ordering in which effects are executed."]],"^16",["^ ","^N","^N"],"~:cljs.analyzer/constants",["^ ","^X",["^F",["~:db","~:do-fx","~:dispatch-n","~:deregister-event-handler","~:dispatch","~:after","~:id","~:effects","~:error","~:ms","~:fx","~:dispatch-later"]],"~:order",["^44","^40","^3W","^3[","^41","^42","^45","^43","^3Z","^3X","^3Y","^3V"]],"^1<",["^ ","^Y",["^F",[]]],"^1=",["^ "],"^1>",["^O","^N","^R","^P","^S","^W","^V","^T","^M"]],"^J","^H","~:ns-specs",["^ "],"~:ns-speced-vars",[],"~:compiler-options",["^1L",[["^49","~:static-fns"],true,["^49","~:elide-asserts"],false,["^49","~:optimize-constants"],null,["^49","^1C"],null,["^49","~:external-config"],null,["^49","~:tooling-config"],null,["^49","~:emit-constants"],null,["^49","~:load-tests"],null,["^49","~:infer-externs"],true,["^49","^1E"],null,["~:js-options","~:js-provider"],"~:shadow",["~:mode"],"~:dev",["^49","~:fn-invoke-direct"],null,["^49","~:source-map"],"/dev/null"]]]