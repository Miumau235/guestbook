["^ ","~:output",["^ ","~:js","goog.provide('mranderson048.re_frame.v0v10v2.re_frame.core');\ngoog.require('cljs.core');\ngoog.require('mranderson048.re_frame.v0v10v2.re_frame.events');\ngoog.require('mranderson048.re_frame.v0v10v2.re_frame.subs');\ngoog.require('mranderson048.re_frame.v0v10v2.re_frame.interop');\ngoog.require('mranderson048.re_frame.v0v10v2.re_frame.db');\ngoog.require('mranderson048.re_frame.v0v10v2.re_frame.fx');\ngoog.require('mranderson048.re_frame.v0v10v2.re_frame.cofx');\ngoog.require('mranderson048.re_frame.v0v10v2.re_frame.router');\ngoog.require('mranderson048.re_frame.v0v10v2.re_frame.loggers');\ngoog.require('mranderson048.re_frame.v0v10v2.re_frame.registrar');\ngoog.require('mranderson048.re_frame.v0v10v2.re_frame.interceptor');\ngoog.require('mranderson048.re_frame.v0v10v2.re_frame.std_interceptors');\ngoog.require('clojure.set');\nmranderson048.re_frame.v0v10v2.re_frame.core.dispatch = mranderson048.re_frame.v0v10v2.re_frame.router.dispatch;\nmranderson048.re_frame.v0v10v2.re_frame.core.dispatch_sync = mranderson048.re_frame.v0v10v2.re_frame.router.dispatch_sync;\nmranderson048.re_frame.v0v10v2.re_frame.core.reg_sub = mranderson048.re_frame.v0v10v2.re_frame.subs.reg_sub;\nmranderson048.re_frame.v0v10v2.re_frame.core.subscribe = mranderson048.re_frame.v0v10v2.re_frame.subs.subscribe;\nmranderson048.re_frame.v0v10v2.re_frame.core.clear_sub = cljs.core.partial.cljs$core$IFn$_invoke$arity$2(mranderson048.re_frame.v0v10v2.re_frame.registrar.clear_handlers,mranderson048.re_frame.v0v10v2.re_frame.subs.kind);\nmranderson048.re_frame.v0v10v2.re_frame.core.clear_subscription_cache_BANG_ = mranderson048.re_frame.v0v10v2.re_frame.subs.clear_subscription_cache_BANG_;\n/**\n * This is a low level, advanced function.  You should probably be\n *   using reg-sub instead.\n *   Docs in https://github.com/Day8/re-frame/blob/master/docs/SubscriptionFlow.md\n */\nmranderson048.re_frame.v0v10v2.re_frame.core.reg_sub_raw = (function mranderson048$re_frame$v0v10v2$re_frame$core$reg_sub_raw(query_id,handler_fn){\nreturn mranderson048.re_frame.v0v10v2.re_frame.registrar.register_handler(mranderson048.re_frame.v0v10v2.re_frame.subs.kind,query_id,handler_fn);\n});\nmranderson048.re_frame.v0v10v2.re_frame.core.reg_fx = mranderson048.re_frame.v0v10v2.re_frame.fx.reg_fx;\nmranderson048.re_frame.v0v10v2.re_frame.core.clear_fx = cljs.core.partial.cljs$core$IFn$_invoke$arity$2(mranderson048.re_frame.v0v10v2.re_frame.registrar.clear_handlers,mranderson048.re_frame.v0v10v2.re_frame.fx.kind);\nmranderson048.re_frame.v0v10v2.re_frame.core.reg_cofx = mranderson048.re_frame.v0v10v2.re_frame.cofx.reg_cofx;\nmranderson048.re_frame.v0v10v2.re_frame.core.inject_cofx = mranderson048.re_frame.v0v10v2.re_frame.cofx.inject_cofx;\nmranderson048.re_frame.v0v10v2.re_frame.core.clear_cofx = cljs.core.partial.cljs$core$IFn$_invoke$arity$2(mranderson048.re_frame.v0v10v2.re_frame.registrar.clear_handlers,mranderson048.re_frame.v0v10v2.re_frame.cofx.kind);\n/**\n * Register the given event `handler` (function) for the given `id`. Optionally, provide\n *   an `interceptors` chain.\n *   `id` is typically a namespaced keyword  (but can be anything)\n *   `handler` is a function: (db event) -> db\n *   `interceptors` is a collection of interceptors. Will be flattened and nils removed.\n *   `handler` is wrapped in its own interceptor and added to the end of the interceptor\n * chain, so that, in the end, only a chain is registered.\n * Special effects and coeffects interceptors are added to the front of this\n * chain.\n */\nmranderson048.re_frame.v0v10v2.re_frame.core.reg_event_db = (function mranderson048$re_frame$v0v10v2$re_frame$core$reg_event_db(var_args){\nvar G__61272 = arguments.length;\nswitch (G__61272) {\ncase 2:\nreturn mranderson048.re_frame.v0v10v2.re_frame.core.reg_event_db.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));\n\nbreak;\ncase 3:\nreturn mranderson048.re_frame.v0v10v2.re_frame.core.reg_event_db.cljs$core$IFn$_invoke$arity$3((arguments[(0)]),(arguments[(1)]),(arguments[(2)]));\n\nbreak;\ndefault:\nthrow (new Error([\"Invalid arity: \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join('')));\n\n}\n});\n\nmranderson048.re_frame.v0v10v2.re_frame.core.reg_event_db.cljs$core$IFn$_invoke$arity$2 = (function (id,handler){\nreturn mranderson048.re_frame.v0v10v2.re_frame.core.reg_event_db.cljs$core$IFn$_invoke$arity$3(id,null,handler);\n});\n\nmranderson048.re_frame.v0v10v2.re_frame.core.reg_event_db.cljs$core$IFn$_invoke$arity$3 = (function (id,interceptors,handler){\nreturn mranderson048.re_frame.v0v10v2.re_frame.events.register(id,new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [mranderson048.re_frame.v0v10v2.re_frame.cofx.inject_db,mranderson048.re_frame.v0v10v2.re_frame.fx.do_fx,interceptors,mranderson048.re_frame.v0v10v2.re_frame.std_interceptors.db_handler__GT_interceptor(handler)], null));\n});\n\nmranderson048.re_frame.v0v10v2.re_frame.core.reg_event_db.cljs$lang$maxFixedArity = 3;\n\n/**\n * Register the given event `handler` (function) for the given `id`. Optionally, provide\n *   an `interceptors` chain.\n *   `id` is typically a namespaced keyword  (but can be anything)\n *   `handler` is a function: (coeffects-map event-vector) -> effects-map\n *   `interceptors` is a collection of interceptors. Will be flattened and nils removed.\n *   `handler` is wrapped in its own interceptor and added to the end of the interceptor\n * chain, so that, in the end, only a chain is registered.\n * Special effects and coeffects interceptors are added to the front of the\n * interceptor chain.  These interceptors inject the value of app-db into coeffects,\n * and, later, action effects.\n */\nmranderson048.re_frame.v0v10v2.re_frame.core.reg_event_fx = (function mranderson048$re_frame$v0v10v2$re_frame$core$reg_event_fx(var_args){\nvar G__61305 = arguments.length;\nswitch (G__61305) {\ncase 2:\nreturn mranderson048.re_frame.v0v10v2.re_frame.core.reg_event_fx.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));\n\nbreak;\ncase 3:\nreturn mranderson048.re_frame.v0v10v2.re_frame.core.reg_event_fx.cljs$core$IFn$_invoke$arity$3((arguments[(0)]),(arguments[(1)]),(arguments[(2)]));\n\nbreak;\ndefault:\nthrow (new Error([\"Invalid arity: \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join('')));\n\n}\n});\n\nmranderson048.re_frame.v0v10v2.re_frame.core.reg_event_fx.cljs$core$IFn$_invoke$arity$2 = (function (id,handler){\nreturn mranderson048.re_frame.v0v10v2.re_frame.core.reg_event_fx.cljs$core$IFn$_invoke$arity$3(id,null,handler);\n});\n\nmranderson048.re_frame.v0v10v2.re_frame.core.reg_event_fx.cljs$core$IFn$_invoke$arity$3 = (function (id,interceptors,handler){\nreturn mranderson048.re_frame.v0v10v2.re_frame.events.register(id,new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [mranderson048.re_frame.v0v10v2.re_frame.cofx.inject_db,mranderson048.re_frame.v0v10v2.re_frame.fx.do_fx,interceptors,mranderson048.re_frame.v0v10v2.re_frame.std_interceptors.fx_handler__GT_interceptor(handler)], null));\n});\n\nmranderson048.re_frame.v0v10v2.re_frame.core.reg_event_fx.cljs$lang$maxFixedArity = 3;\n\n/**\n * Register the given event `handler` (function) for the given `id`. Optionally, provide\n *   an `interceptors` chain.\n *   `id` is typically a namespaced keyword  (but can be anything)\n *   `handler` is a function: (context-map event-vector) -> context-map\n * \n *   This form of registration is almost never used. \n */\nmranderson048.re_frame.v0v10v2.re_frame.core.reg_event_ctx = (function mranderson048$re_frame$v0v10v2$re_frame$core$reg_event_ctx(var_args){\nvar G__61314 = arguments.length;\nswitch (G__61314) {\ncase 2:\nreturn mranderson048.re_frame.v0v10v2.re_frame.core.reg_event_ctx.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));\n\nbreak;\ncase 3:\nreturn mranderson048.re_frame.v0v10v2.re_frame.core.reg_event_ctx.cljs$core$IFn$_invoke$arity$3((arguments[(0)]),(arguments[(1)]),(arguments[(2)]));\n\nbreak;\ndefault:\nthrow (new Error([\"Invalid arity: \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join('')));\n\n}\n});\n\nmranderson048.re_frame.v0v10v2.re_frame.core.reg_event_ctx.cljs$core$IFn$_invoke$arity$2 = (function (id,handler){\nreturn mranderson048.re_frame.v0v10v2.re_frame.core.reg_event_ctx.cljs$core$IFn$_invoke$arity$3(id,null,handler);\n});\n\nmranderson048.re_frame.v0v10v2.re_frame.core.reg_event_ctx.cljs$core$IFn$_invoke$arity$3 = (function (id,interceptors,handler){\nreturn mranderson048.re_frame.v0v10v2.re_frame.events.register(id,new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [mranderson048.re_frame.v0v10v2.re_frame.cofx.inject_db,mranderson048.re_frame.v0v10v2.re_frame.fx.do_fx,interceptors,mranderson048.re_frame.v0v10v2.re_frame.std_interceptors.ctx_handler__GT_interceptor(handler)], null));\n});\n\nmranderson048.re_frame.v0v10v2.re_frame.core.reg_event_ctx.cljs$lang$maxFixedArity = 3;\n\nmranderson048.re_frame.v0v10v2.re_frame.core.clear_event = cljs.core.partial.cljs$core$IFn$_invoke$arity$2(mranderson048.re_frame.v0v10v2.re_frame.registrar.clear_handlers,mranderson048.re_frame.v0v10v2.re_frame.events.kind);\nmranderson048.re_frame.v0v10v2.re_frame.core.debug = mranderson048.re_frame.v0v10v2.re_frame.std_interceptors.debug;\nmranderson048.re_frame.v0v10v2.re_frame.core.path = mranderson048.re_frame.v0v10v2.re_frame.std_interceptors.path;\nmranderson048.re_frame.v0v10v2.re_frame.core.enrich = mranderson048.re_frame.v0v10v2.re_frame.std_interceptors.enrich;\nmranderson048.re_frame.v0v10v2.re_frame.core.trim_v = mranderson048.re_frame.v0v10v2.re_frame.std_interceptors.trim_v;\nmranderson048.re_frame.v0v10v2.re_frame.core.after = mranderson048.re_frame.v0v10v2.re_frame.std_interceptors.after;\nmranderson048.re_frame.v0v10v2.re_frame.core.on_changes = mranderson048.re_frame.v0v10v2.re_frame.std_interceptors.on_changes;\nmranderson048.re_frame.v0v10v2.re_frame.core.__GT_interceptor = mranderson048.re_frame.v0v10v2.re_frame.interceptor.__GT_interceptor;\nmranderson048.re_frame.v0v10v2.re_frame.core.get_coeffect = mranderson048.re_frame.v0v10v2.re_frame.interceptor.get_coeffect;\nmranderson048.re_frame.v0v10v2.re_frame.core.assoc_coeffect = mranderson048.re_frame.v0v10v2.re_frame.interceptor.assoc_coeffect;\nmranderson048.re_frame.v0v10v2.re_frame.core.get_effect = mranderson048.re_frame.v0v10v2.re_frame.interceptor.get_effect;\nmranderson048.re_frame.v0v10v2.re_frame.core.assoc_effect = mranderson048.re_frame.v0v10v2.re_frame.interceptor.assoc_effect;\nmranderson048.re_frame.v0v10v2.re_frame.core.enqueue = mranderson048.re_frame.v0v10v2.re_frame.interceptor.enqueue;\nmranderson048.re_frame.v0v10v2.re_frame.core.set_loggers_BANG_ = mranderson048.re_frame.v0v10v2.re_frame.loggers.set_loggers_BANG_;\nmranderson048.re_frame.v0v10v2.re_frame.core.console = mranderson048.re_frame.v0v10v2.re_frame.loggers.console;\n/**\n * Checkpoints the state of mranderson048.re-frame.v0v10v2.re-frame and returns a function which, when\n *   later called, will restore mranderson048.re-frame.v0v10v2.re-frame to that checkpointed state.\n * \n *   Checkpoint includes app-db, all registered handlers and all subscriptions.\n *   \n */\nmranderson048.re_frame.v0v10v2.re_frame.core.make_restore_fn = (function mranderson048$re_frame$v0v10v2$re_frame$core$make_restore_fn(){\nvar handlers = cljs.core.deref(mranderson048.re_frame.v0v10v2.re_frame.registrar.kind__GT_id__GT_handler);\nvar app_db = cljs.core.deref(mranderson048.re_frame.v0v10v2.re_frame.db.app_db);\nvar subs_cache = cljs.core.deref(mranderson048.re_frame.v0v10v2.re_frame.subs.query__GT_reaction);\nreturn ((function (handlers,app_db,subs_cache){\nreturn (function (){\nvar original_subs_61401 = cljs.core.set(cljs.core.vals(subs_cache));\nvar current_subs_61402 = cljs.core.set(cljs.core.vals(cljs.core.deref(mranderson048.re_frame.v0v10v2.re_frame.subs.query__GT_reaction)));\nvar seq__61329_61403 = cljs.core.seq(clojure.set.difference.cljs$core$IFn$_invoke$arity$2(current_subs_61402,original_subs_61401));\nvar chunk__61330_61404 = null;\nvar count__61331_61405 = (0);\nvar i__61332_61406 = (0);\nwhile(true){\nif((i__61332_61406 < count__61331_61405)){\nvar sub_61410 = chunk__61330_61404.cljs$core$IIndexed$_nth$arity$2(null,i__61332_61406);\nmranderson048.re_frame.v0v10v2.re_frame.interop.dispose_BANG_(sub_61410);\n\n\nvar G__61412 = seq__61329_61403;\nvar G__61413 = chunk__61330_61404;\nvar G__61414 = count__61331_61405;\nvar G__61415 = (i__61332_61406 + (1));\nseq__61329_61403 = G__61412;\nchunk__61330_61404 = G__61413;\ncount__61331_61405 = G__61414;\ni__61332_61406 = G__61415;\ncontinue;\n} else {\nvar temp__5735__auto___61416 = cljs.core.seq(seq__61329_61403);\nif(temp__5735__auto___61416){\nvar seq__61329_61417__$1 = temp__5735__auto___61416;\nif(cljs.core.chunked_seq_QMARK_(seq__61329_61417__$1)){\nvar c__4550__auto___61418 = cljs.core.chunk_first(seq__61329_61417__$1);\nvar G__61419 = cljs.core.chunk_rest(seq__61329_61417__$1);\nvar G__61420 = c__4550__auto___61418;\nvar G__61421 = cljs.core.count(c__4550__auto___61418);\nvar G__61422 = (0);\nseq__61329_61403 = G__61419;\nchunk__61330_61404 = G__61420;\ncount__61331_61405 = G__61421;\ni__61332_61406 = G__61422;\ncontinue;\n} else {\nvar sub_61423 = cljs.core.first(seq__61329_61417__$1);\nmranderson048.re_frame.v0v10v2.re_frame.interop.dispose_BANG_(sub_61423);\n\n\nvar G__61424 = cljs.core.next(seq__61329_61417__$1);\nvar G__61425 = null;\nvar G__61426 = (0);\nvar G__61427 = (0);\nseq__61329_61403 = G__61424;\nchunk__61330_61404 = G__61425;\ncount__61331_61405 = G__61426;\ni__61332_61406 = G__61427;\ncontinue;\n}\n} else {\n}\n}\nbreak;\n}\n\ncljs.core.reset_BANG_(mranderson048.re_frame.v0v10v2.re_frame.registrar.kind__GT_id__GT_handler,handlers);\n\ncljs.core.reset_BANG_(mranderson048.re_frame.v0v10v2.re_frame.db.app_db,app_db);\n\nreturn null;\n});\n;})(handlers,app_db,subs_cache))\n});\n/**\n * Registers a function `f` to be called after each event is processed\n * `f` will be called with two arguments:\n *  - `event`: a vector. The event just processed.\n *  - `queue`: a PersistentQueue, possibly empty, of events yet to be processed.\n * \n * This is useful in advanced cases like:\n *   - you are implementing a complex bootstrap pipeline\n *   - you want to create your own handling infrastructure, with perhaps multiple\n *     handlers for the one event, etc.  Hook in here.\n *   - libraries providing 'isomorphic javascript' rendering on  Nodejs or Nashorn.\n * \n *   'id' is typically a keyword. Supplied at \"add time\" so it can subsequently\n *   be used at \"remove time\" to get rid of the right callback.\n *   \n */\nmranderson048.re_frame.v0v10v2.re_frame.core.add_post_event_callback = (function mranderson048$re_frame$v0v10v2$re_frame$core$add_post_event_callback(var_args){\nvar G__61356 = arguments.length;\nswitch (G__61356) {\ncase 1:\nreturn mranderson048.re_frame.v0v10v2.re_frame.core.add_post_event_callback.cljs$core$IFn$_invoke$arity$1((arguments[(0)]));\n\nbreak;\ncase 2:\nreturn mranderson048.re_frame.v0v10v2.re_frame.core.add_post_event_callback.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));\n\nbreak;\ndefault:\nthrow (new Error([\"Invalid arity: \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join('')));\n\n}\n});\n\nmranderson048.re_frame.v0v10v2.re_frame.core.add_post_event_callback.cljs$core$IFn$_invoke$arity$1 = (function (f){\nreturn mranderson048.re_frame.v0v10v2.re_frame.core.add_post_event_callback.cljs$core$IFn$_invoke$arity$2(f,f);\n});\n\nmranderson048.re_frame.v0v10v2.re_frame.core.add_post_event_callback.cljs$core$IFn$_invoke$arity$2 = (function (id,f){\nreturn mranderson048.re_frame.v0v10v2.re_frame.router.event_queue.mranderson048$re_frame$v0v10v2$re_frame$router$IEventQueue$add_post_event_callback$arity$3(null,id,f);\n});\n\nmranderson048.re_frame.v0v10v2.re_frame.core.add_post_event_callback.cljs$lang$maxFixedArity = 2;\n\nmranderson048.re_frame.v0v10v2.re_frame.core.remove_post_event_callback = (function mranderson048$re_frame$v0v10v2$re_frame$core$remove_post_event_callback(id){\nreturn mranderson048.re_frame.v0v10v2.re_frame.router.event_queue.mranderson048$re_frame$v0v10v2$re_frame$router$IEventQueue$remove_post_event_callback$arity$2(null,id);\n});\nmranderson048.re_frame.v0v10v2.re_frame.core.register_handler = (function mranderson048$re_frame$v0v10v2$re_frame$core$register_handler(var_args){\nvar args__4736__auto__ = [];\nvar len__4730__auto___61448 = arguments.length;\nvar i__4731__auto___61449 = (0);\nwhile(true){\nif((i__4731__auto___61449 < len__4730__auto___61448)){\nargs__4736__auto__.push((arguments[i__4731__auto___61449]));\n\nvar G__61456 = (i__4731__auto___61449 + (1));\ni__4731__auto___61449 = G__61456;\ncontinue;\n} else {\n}\nbreak;\n}\n\nvar argseq__4737__auto__ = ((((0) < args__4736__auto__.length))?(new cljs.core.IndexedSeq(args__4736__auto__.slice((0)),(0),null)):null);\nreturn mranderson048.re_frame.v0v10v2.re_frame.core.register_handler.cljs$core$IFn$_invoke$arity$variadic(argseq__4737__auto__);\n});\n\nmranderson048.re_frame.v0v10v2.re_frame.core.register_handler.cljs$core$IFn$_invoke$arity$variadic = (function (args){\nvar G__61370_61467 = new cljs.core.Keyword(null,\"warn\",\"warn\",-436710552);\nvar G__61371_61468 = \"re-frame:  \\\"register-handler\\\" has been renamed \\\"reg-event-db\\\" (look for registration of \";\nvar G__61372_61469 = cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.first(args));\nvar G__61373_61470 = \")\";\n(mranderson048.re_frame.v0v10v2.re_frame.core.console.cljs$core$IFn$_invoke$arity$4 ? mranderson048.re_frame.v0v10v2.re_frame.core.console.cljs$core$IFn$_invoke$arity$4(G__61370_61467,G__61371_61468,G__61372_61469,G__61373_61470) : mranderson048.re_frame.v0v10v2.re_frame.core.console.call(null,G__61370_61467,G__61371_61468,G__61372_61469,G__61373_61470));\n\nreturn cljs.core.apply.cljs$core$IFn$_invoke$arity$2(mranderson048.re_frame.v0v10v2.re_frame.core.reg_event_db,args);\n});\n\nmranderson048.re_frame.v0v10v2.re_frame.core.register_handler.cljs$lang$maxFixedArity = (0);\n\n/** @this {Function} */\nmranderson048.re_frame.v0v10v2.re_frame.core.register_handler.cljs$lang$applyTo = (function (seq61367){\nvar self__4718__auto__ = this;\nreturn self__4718__auto__.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq61367));\n});\n\nmranderson048.re_frame.v0v10v2.re_frame.core.register_sub = (function mranderson048$re_frame$v0v10v2$re_frame$core$register_sub(var_args){\nvar args__4736__auto__ = [];\nvar len__4730__auto___61479 = arguments.length;\nvar i__4731__auto___61480 = (0);\nwhile(true){\nif((i__4731__auto___61480 < len__4730__auto___61479)){\nargs__4736__auto__.push((arguments[i__4731__auto___61480]));\n\nvar G__61482 = (i__4731__auto___61480 + (1));\ni__4731__auto___61480 = G__61482;\ncontinue;\n} else {\n}\nbreak;\n}\n\nvar argseq__4737__auto__ = ((((0) < args__4736__auto__.length))?(new cljs.core.IndexedSeq(args__4736__auto__.slice((0)),(0),null)):null);\nreturn mranderson048.re_frame.v0v10v2.re_frame.core.register_sub.cljs$core$IFn$_invoke$arity$variadic(argseq__4737__auto__);\n});\n\nmranderson048.re_frame.v0v10v2.re_frame.core.register_sub.cljs$core$IFn$_invoke$arity$variadic = (function (args){\nvar G__61376_61487 = new cljs.core.Keyword(null,\"warn\",\"warn\",-436710552);\nvar G__61377_61488 = \"re-frame:  \\\"register-sub\\\" is deprecated. Use \\\"reg-sub-raw\\\" (look for registration of \";\nvar G__61378_61489 = cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.first(args));\nvar G__61379_61490 = \")\";\n(mranderson048.re_frame.v0v10v2.re_frame.core.console.cljs$core$IFn$_invoke$arity$4 ? mranderson048.re_frame.v0v10v2.re_frame.core.console.cljs$core$IFn$_invoke$arity$4(G__61376_61487,G__61377_61488,G__61378_61489,G__61379_61490) : mranderson048.re_frame.v0v10v2.re_frame.core.console.call(null,G__61376_61487,G__61377_61488,G__61378_61489,G__61379_61490));\n\nreturn cljs.core.apply.cljs$core$IFn$_invoke$arity$2(mranderson048.re_frame.v0v10v2.re_frame.core.reg_sub_raw,args);\n});\n\nmranderson048.re_frame.v0v10v2.re_frame.core.register_sub.cljs$lang$maxFixedArity = (0);\n\n/** @this {Function} */\nmranderson048.re_frame.v0v10v2.re_frame.core.register_sub.cljs$lang$applyTo = (function (seq61374){\nvar self__4718__auto__ = this;\nreturn self__4718__auto__.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq61374));\n});\n\n","~:ns-info",["^ ","~:rename-macros",null,"~:renames",["^ "],"~:meta",["^ ","~:file","mranderson048/re_frame/v0v10v2/re_frame/core.cljc","~:line",1,"~:column",5,"~:end-line",1,"~:end-column",49],"~:ns-aliases",["^ ","~$cljs.loader","~$shadow.loader","~$react","~$module$node_modules$react$index","~$create-react-class","~$module$node_modules$create_react_class$index","~$react-dom","~$module$node_modules$react_dom$index"],"~:use-macros",null,"~:excludes",["~#set",[]],"~:name","~$mranderson048.re-frame.v0v10v2.re-frame.core","~:op","~:ns","~:imports",null,"~:requires",["^ ","~$subs","~$mranderson048.re-frame.v0v10v2.re-frame.subs","~$set","~$clojure.set","~$cofx","~$mranderson048.re-frame.v0v10v2.re-frame.cofx","~$fx","~$mranderson048.re-frame.v0v10v2.re-frame.fx","~$loggers","~$mranderson048.re-frame.v0v10v2.re-frame.loggers","^V","^V","~$cljs.core","^W","~$interceptor","~$mranderson048.re-frame.v0v10v2.re-frame.interceptor","~$goog","^Z","~$mranderson048.re-frame.v0v10v2.re-frame.db","^[","~$router","~$mranderson048.re-frame.v0v10v2.re-frame.router","~$mranderson048.re-frame.v0v10v2.re-frame.std-interceptors","^12","~$db","^[","~$registrar","~$mranderson048.re-frame.v0v10v2.re-frame.registrar","^Y","^Y","^15","^15","^P","^P","~$events","~$mranderson048.re-frame.v0v10v2.re-frame.events","^R","^R","^11","^11","^N","^N","^T","^T","^17","^17","~$interop","~$mranderson048.re-frame.v0v10v2.re-frame.interop","~$std-interceptors","^12","^19","^19"],"~:seen",["^F",["~:require"]],"~:uses",["^ ","~$db-handler->interceptor","^12","~$fx-handler->interceptor","^12","~$ctx-handler->interceptor","^12"],"~:require-macros",["^ ","^W","^W"],"~:form",["~#list",["~$ns","^H",["^1C",["^1<",["^17","~:as","^16"],["^N","^1E","^M"],["^19","^1E","^18"],["^[","^1E","^13"],["^T","^1E","^S"],["^R","^1E","^Q"],["^11","^1E","^10"],["^V","^1E","^U"],["^15","^1E","^14"],["^Y","^1E","^X"],["^12","^1E","^1:","~:refer",["^1>","^1?","^1@"]],["^P","^1E","^O"]]]]],"~:flags",["^ ","^1<",["^F",[]]],"~:js-deps",["^ "],"~:deps",["^Z","^W","^17","^N","^19","^[","^T","^R","^11","^V","^15","^Y","^12","^P"]],"^J","^H","~:resource-id",["~:shadow.build.classpath/resource","mranderson048/re_frame/v0v10v2/re_frame/core.cljc"],"~:compiled-at",1596107166483,"~:resource-name","mranderson048/re_frame/v0v10v2/re_frame/core.cljc","~:warnings",[],"~:source","(ns mranderson048.re-frame.v0v10v2.re-frame.core\n  (:require\n    [mranderson048.re-frame.v0v10v2.re-frame.events           :as events]\n    [mranderson048.re-frame.v0v10v2.re-frame.subs             :as subs]\n    [mranderson048.re-frame.v0v10v2.re-frame.interop          :as interop]\n    [mranderson048.re-frame.v0v10v2.re-frame.db               :as db]\n    [mranderson048.re-frame.v0v10v2.re-frame.fx               :as fx]\n    [mranderson048.re-frame.v0v10v2.re-frame.cofx             :as cofx]\n    [mranderson048.re-frame.v0v10v2.re-frame.router           :as router]\n    [mranderson048.re-frame.v0v10v2.re-frame.loggers          :as loggers]\n    [mranderson048.re-frame.v0v10v2.re-frame.registrar        :as registrar]\n    [mranderson048.re-frame.v0v10v2.re-frame.interceptor      :as interceptor]\n    [mranderson048.re-frame.v0v10v2.re-frame.std-interceptors :as std-interceptors :refer [db-handler->interceptor\n                                                             fx-handler->interceptor\n                                                             ctx-handler->interceptor]]\n    [clojure.set               :as set]))\n\n\n;; -- API ---------------------------------------------------------------------\n;;\n;; This namespace represents the mranderson048.re-frame.v0v10v2.re-frame API\n;;\n;; Below, you'll see we've used this technique:\n;;   (def  api-name-for-fn    deeper.namespace/where-the-defn-is)\n;;\n;; So, we promote a `defn` in a deeper namespace \"up\" to the API\n;; via a `def` in this namespace.\n;;\n;; Turns out, this approach makes it hard:\n;;   - to auto-generate API docs\n;;   - for IDEs to provide code completion on functions in the API\n;;\n;; Which is annoying. But there are pros and cons and we haven't\n;; yet revisited the decision.  To compensate, we've added more nudity\n;; to the docs.\n;;\n\n\n;; -- dispatch ----------------------------------------------------------------\n(def dispatch       router/dispatch)\n(def dispatch-sync  router/dispatch-sync)\n\n\n;; -- subscriptions -----------------------------------------------------------\n(def reg-sub        subs/reg-sub)\n(def subscribe      subs/subscribe)\n\n(def clear-sub (partial registrar/clear-handlers subs/kind))  ;; think unreg-sub\n(def clear-subscription-cache! subs/clear-subscription-cache!)\n\n(defn reg-sub-raw\n  \"This is a low level, advanced function.  You should probably be\n  using reg-sub instead.\n  Docs in https://github.com/Day8/re-frame/blob/master/docs/SubscriptionFlow.md\"\n  [query-id handler-fn]\n  (registrar/register-handler subs/kind query-id handler-fn))\n\n\n;; -- effects -----------------------------------------------------------------\n(def reg-fx      fx/reg-fx)\n(def clear-fx    (partial registrar/clear-handlers fx/kind))  ;; think unreg-fx\n\n;; -- coeffects ---------------------------------------------------------------\n(def reg-cofx    cofx/reg-cofx)\n(def inject-cofx cofx/inject-cofx)\n(def clear-cofx (partial registrar/clear-handlers cofx/kind)) ;; think unreg-cofx\n\n\n;; -- Events ------------------------------------------------------------------\n\n(defn reg-event-db\n  \"Register the given event `handler` (function) for the given `id`. Optionally, provide\n  an `interceptors` chain.\n  `id` is typically a namespaced keyword  (but can be anything)\n  `handler` is a function: (db event) -> db\n  `interceptors` is a collection of interceptors. Will be flattened and nils removed.\n  `handler` is wrapped in its own interceptor and added to the end of the interceptor\n   chain, so that, in the end, only a chain is registered.\n   Special effects and coeffects interceptors are added to the front of this\n   chain.\"\n  ([id handler]\n    (reg-event-db id nil handler))\n  ([id interceptors handler]\n   (events/register id [cofx/inject-db fx/do-fx interceptors (db-handler->interceptor handler)])))\n\n\n(defn reg-event-fx\n  \"Register the given event `handler` (function) for the given `id`. Optionally, provide\n  an `interceptors` chain.\n  `id` is typically a namespaced keyword  (but can be anything)\n  `handler` is a function: (coeffects-map event-vector) -> effects-map\n  `interceptors` is a collection of interceptors. Will be flattened and nils removed.\n  `handler` is wrapped in its own interceptor and added to the end of the interceptor\n   chain, so that, in the end, only a chain is registered.\n   Special effects and coeffects interceptors are added to the front of the\n   interceptor chain.  These interceptors inject the value of app-db into coeffects,\n   and, later, action effects.\"\n  ([id handler]\n   (reg-event-fx id nil handler))\n  ([id interceptors handler]\n   (events/register id [cofx/inject-db fx/do-fx interceptors (fx-handler->interceptor handler)])))\n\n\n(defn reg-event-ctx\n  \"Register the given event `handler` (function) for the given `id`. Optionally, provide\n  an `interceptors` chain.\n  `id` is typically a namespaced keyword  (but can be anything)\n  `handler` is a function: (context-map event-vector) -> context-map\n\n  This form of registration is almost never used. \"\n  ([id handler]\n   (reg-event-ctx id nil handler))\n  ([id interceptors handler]\n   (events/register id [cofx/inject-db fx/do-fx interceptors (ctx-handler->interceptor handler)])))\n\n(def clear-event (partial registrar/clear-handlers events/kind)) ;; think unreg-event-*\n\n;; -- interceptors ------------------------------------------------------------\n\n;; Standard interceptors.\n;; Detailed docs on each in std-interceptors.cljs\n(def debug       std-interceptors/debug)\n(def path        std-interceptors/path)\n(def enrich      std-interceptors/enrich)\n(def trim-v      std-interceptors/trim-v)\n(def after       std-interceptors/after)\n(def on-changes  std-interceptors/on-changes)\n\n\n;; Utility functions for creating your own interceptors\n;;\n;;  (def my-interceptor\n;;     (->interceptor                ;; used to create an interceptor\n;;       :id     :my-interceptor     ;; an id - decorative only\n;;       :before (fn [context]                         ;; you normally want to change :coeffects\n;;                  ... use get-coeffect  and assoc-coeffect\n;;                       )\n;;       :after  (fn [context]                         ;; you normally want to change :effects\n;;                 (let [db (get-effect context :db)]  ;; (get-in context [:effects :db])\n;;                   (assoc-effect context :http-ajax {...}])))))\n;;\n(def ->interceptor   interceptor/->interceptor)\n(def get-coeffect    interceptor/get-coeffect)\n(def assoc-coeffect  interceptor/assoc-coeffect)\n(def get-effect      interceptor/get-effect)\n(def assoc-effect    interceptor/assoc-effect)\n(def enqueue         interceptor/enqueue)\n\n\n;; --  logging ----------------------------------------------------------------\n;; Internally, mranderson048.re-frame.v0v10v2.re-frame uses the logging functions: warn, log, error, group and groupEnd\n;; By default, these functions map directly to the js/console implementations,\n;; but you can override with your own fns (set or subset).\n;; Example Usage:\n;;   (defn my-fn [& args]  (post-it-somewhere (apply str args)))  ;; here is my alternative\n;;   (mranderson048.re-frame.v0v10v2.re-frame.core/set-loggers!  {:warn my-fn :log my-fn})       ;; override the defaults with mine\n(def set-loggers! loggers/set-loggers!)\n\n;; If you are writing an extension to re-frame, like perhaps\n;; an effects handler, you may want to use mranderson048.re-frame.v0v10v2.re-frame logging.\n;;\n;; usage: (console :error \"Oh, dear God, it happened: \" a-var \" and \" another)\n;;        (console :warn \"Possible breach of containment wall at: \" dt)\n(def console loggers/console)\n\n\n;; -- unit testing ------------------------------------------------------------\n\n(defn make-restore-fn\n  \"Checkpoints the state of mranderson048.re-frame.v0v10v2.re-frame and returns a function which, when\n  later called, will restore mranderson048.re-frame.v0v10v2.re-frame to that checkpointed state.\n\n  Checkpoint includes app-db, all registered handlers and all subscriptions.\n  \"\n  []\n  (let [handlers @registrar/kind->id->handler\n        app-db   @db/app-db\n\t\t\t\tsubs-cache @subs/query->reaction]\n    (fn []\n\t\t\t;; call `dispose!` on all current subscriptions which\n\t\t\t;; didn't originally exist.\n      (let [original-subs (set (vals subs-cache))\n            current-subs  (set (vals @subs/query->reaction))]\n        (doseq [sub (set/difference current-subs original-subs)]\n          (interop/dispose! sub)))\n\n      ;; Reset the atoms\n      ;; We don't need to reset subs/query->reaction, as\n      ;; disposing of the subs removes them from the cache anyway\n      (reset! registrar/kind->id->handler handlers)\n      (reset! db/app-db app-db)\n      nil)))\n\n\n;; -- Event Processing Callbacks  ---------------------------------------------\n\n(defn add-post-event-callback\n  \"Registers a function `f` to be called after each event is processed\n   `f` will be called with two arguments:\n    - `event`: a vector. The event just processed.\n    - `queue`: a PersistentQueue, possibly empty, of events yet to be processed.\n\n   This is useful in advanced cases like:\n     - you are implementing a complex bootstrap pipeline\n     - you want to create your own handling infrastructure, with perhaps multiple\n       handlers for the one event, etc.  Hook in here.\n     - libraries providing 'isomorphic javascript' rendering on  Nodejs or Nashorn.\n\n  'id' is typically a keyword. Supplied at \\\"add time\\\" so it can subsequently\n  be used at \\\"remove time\\\" to get rid of the right callback.\n  \"\n  ([f]\n   (add-post-event-callback f f))   ;; use f as its own identifier\n  ([id f]\n   (router/add-post-event-callback mranderson048.re-frame.v0v10v2.re-frame.router/event-queue id f)))\n\n\n(defn remove-post-event-callback\n  [id]\n  (router/remove-post-event-callback mranderson048.re-frame.v0v10v2.re-frame.router/event-queue id))\n\n\n;; --  Deprecation ------------------------------------------------------------\n;; Assisting the v0.7.x ->  v0.8.x transition.\n(defn register-handler\n  [& args]\n  (console :warn  \"re-frame:  \\\"register-handler\\\" has been renamed \\\"reg-event-db\\\" (look for registration of \" (str (first args)) \")\")\n  (apply reg-event-db args))\n\n(defn register-sub\n  [& args]\n  (console :warn  \"re-frame:  \\\"register-sub\\\" is deprecated. Use \\\"reg-sub-raw\\\" (look for registration of \" (str (first args)) \")\")\n  (apply reg-sub-raw args))\n","~:reader-features",["^F",["~:cljs"]],"~:cljc",true,"~:source-map-compact",["^ ","mappings","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","names",["mranderson048.re-frame.v0v10v2.re-frame.core/dispatch","mranderson048.re-frame.v0v10v2.re-frame.router/dispatch","mranderson048.re-frame.v0v10v2.re-frame.core/dispatch-sync","mranderson048.re-frame.v0v10v2.re-frame.router/dispatch-sync","mranderson048.re-frame.v0v10v2.re-frame.core/reg-sub","mranderson048.re-frame.v0v10v2.re-frame.subs/reg-sub","mranderson048.re-frame.v0v10v2.re-frame.core/subscribe","mranderson048.re-frame.v0v10v2.re-frame.subs/subscribe","mranderson048.re-frame.v0v10v2.re-frame.core/clear-sub","cljs.core.partial.cljs$core$IFn$_invoke$arity$2","mranderson048.re-frame.v0v10v2.re-frame.registrar/clear-handlers","mranderson048.re-frame.v0v10v2.re-frame.subs/kind","mranderson048.re-frame.v0v10v2.re-frame.core/clear-subscription-cache!","mranderson048.re-frame.v0v10v2.re-frame.subs/clear-subscription-cache!","mranderson048.re-frame.v0v10v2.re-frame.core/reg-sub-raw","query-id","handler-fn","mranderson048.re-frame.v0v10v2.re-frame.registrar/register-handler","mranderson048.re-frame.v0v10v2.re-frame.core/reg-fx","mranderson048.re-frame.v0v10v2.re-frame.fx/reg-fx","mranderson048.re-frame.v0v10v2.re-frame.core/clear-fx","mranderson048.re-frame.v0v10v2.re-frame.fx/kind","mranderson048.re-frame.v0v10v2.re-frame.core/reg-cofx","mranderson048.re-frame.v0v10v2.re-frame.cofx/reg-cofx","mranderson048.re-frame.v0v10v2.re-frame.core/inject-cofx","mranderson048.re-frame.v0v10v2.re-frame.cofx/inject-cofx","mranderson048.re-frame.v0v10v2.re-frame.core/clear-cofx","mranderson048.re-frame.v0v10v2.re-frame.cofx/kind","var_args","G__61272","mranderson048.re-frame.v0v10v2.re-frame.core/reg-event-db","js/Error","id","handler","mranderson048.re_frame.v0v10v2.re_frame.core.reg_event_db.cljs$core$IFn$_invoke$arity$3","interceptors","mranderson048.re-frame.v0v10v2.re-frame.events/register","mranderson048.re-frame.v0v10v2.re-frame.cofx/inject-db","mranderson048.re-frame.v0v10v2.re-frame.fx/do-fx","mranderson048.re-frame.v0v10v2.re-frame.std-interceptors/db-handler->interceptor","G__61305","mranderson048.re-frame.v0v10v2.re-frame.core/reg-event-fx","mranderson048.re_frame.v0v10v2.re_frame.core.reg_event_fx.cljs$core$IFn$_invoke$arity$3","mranderson048.re-frame.v0v10v2.re-frame.std-interceptors/fx-handler->interceptor","G__61314","mranderson048.re-frame.v0v10v2.re-frame.core/reg-event-ctx","mranderson048.re_frame.v0v10v2.re_frame.core.reg_event_ctx.cljs$core$IFn$_invoke$arity$3","mranderson048.re-frame.v0v10v2.re-frame.std-interceptors/ctx-handler->interceptor","mranderson048.re-frame.v0v10v2.re-frame.core/clear-event","mranderson048.re-frame.v0v10v2.re-frame.events/kind","mranderson048.re-frame.v0v10v2.re-frame.core/debug","mranderson048.re-frame.v0v10v2.re-frame.std-interceptors/debug","mranderson048.re-frame.v0v10v2.re-frame.core/path","mranderson048.re-frame.v0v10v2.re-frame.std-interceptors/path","mranderson048.re-frame.v0v10v2.re-frame.core/enrich","mranderson048.re-frame.v0v10v2.re-frame.std-interceptors/enrich","mranderson048.re-frame.v0v10v2.re-frame.core/trim-v","mranderson048.re-frame.v0v10v2.re-frame.std-interceptors/trim-v","mranderson048.re-frame.v0v10v2.re-frame.core/after","mranderson048.re-frame.v0v10v2.re-frame.std-interceptors/after","mranderson048.re-frame.v0v10v2.re-frame.core/on-changes","mranderson048.re-frame.v0v10v2.re-frame.std-interceptors/on-changes","mranderson048.re-frame.v0v10v2.re-frame.core/->interceptor","mranderson048.re-frame.v0v10v2.re-frame.interceptor/->interceptor","mranderson048.re-frame.v0v10v2.re-frame.core/get-coeffect","mranderson048.re-frame.v0v10v2.re-frame.interceptor/get-coeffect","mranderson048.re-frame.v0v10v2.re-frame.core/assoc-coeffect","mranderson048.re-frame.v0v10v2.re-frame.interceptor/assoc-coeffect","mranderson048.re-frame.v0v10v2.re-frame.core/get-effect","mranderson048.re-frame.v0v10v2.re-frame.interceptor/get-effect","mranderson048.re-frame.v0v10v2.re-frame.core/assoc-effect","mranderson048.re-frame.v0v10v2.re-frame.interceptor/assoc-effect","mranderson048.re-frame.v0v10v2.re-frame.core/enqueue","mranderson048.re-frame.v0v10v2.re-frame.interceptor/enqueue","mranderson048.re-frame.v0v10v2.re-frame.core/set-loggers!","mranderson048.re-frame.v0v10v2.re-frame.loggers/set-loggers!","mranderson048.re-frame.v0v10v2.re-frame.core/console","mranderson048.re-frame.v0v10v2.re-frame.loggers/console","mranderson048.re-frame.v0v10v2.re-frame.core/make-restore-fn","cljs.core/deref","handlers","mranderson048.re-frame.v0v10v2.re-frame.registrar/kind->id->handler","app-db","mranderson048.re-frame.v0v10v2.re-frame.db/app-db","subs-cache","mranderson048.re-frame.v0v10v2.re-frame.subs/query->reaction","original-subs","cljs.core/set","cljs.core/vals","current-subs","seq__61329","cljs.core/seq","chunk__61330","count__61331","i__61332","temp__5735__auto__","cljs.core/chunked-seq?","c__4550__auto__","cljs.core/chunk-first","cljs.core/chunk-rest","cljs.core/count","cljs.core/first","cljs.core/next","sub","clojure.set.difference.cljs$core$IFn$_invoke$arity$2","mranderson048.re-frame.v0v10v2.re-frame.interop/dispose!","cljs.core/reset!","G__61356","mranderson048.re-frame.v0v10v2.re-frame.core/add-post-event-callback","f","mranderson048.re_frame.v0v10v2.re_frame.core.add_post_event_callback.cljs$core$IFn$_invoke$arity$2","mranderson048.re-frame.v0v10v2.re-frame.router/event-queue","mranderson048.re-frame.v0v10v2.re-frame.core/remove-post-event-callback","args__4736__auto__","len__4730__auto__","i__4731__auto__","argseq__4737__auto__","cljs.core/IndexedSeq","mranderson048.re-frame.v0v10v2.re-frame.core/register-handler","seq61367","self__4718__auto__","args","G__61370","G__61371","G__61372","G__61373","cljs.core.apply.cljs$core$IFn$_invoke$arity$2","mranderson048.re-frame.v0v10v2.re-frame.core/register-sub","seq61374","G__61376","G__61377","G__61378","G__61379"]]],"~:cache-keys",["~#cmap",[["~:shadow.build.npm/resource","node_modules/react-dom/index.js"],[1596092746000,1596092746000,499162500000,"~:shadow.build.compiler/resolve",["^ ","~:require-id",null,"~:deps-ids",["^F",[]],"~:deps-syms",["~$shadow.js","~$module$node_modules$react_dom$cjs$react_dom_production_min","~$module$node_modules$react_dom$cjs$react_dom_development","~$module$node_modules$process$browser"]]],["^1K","goog/dom/tagname.js"],[1596092743000,"^1Y",["^ ","^1Z",null,"^1[",["^F",[]],"^20",["^Z","~$goog.dom.HtmlElement"]]],["^1K","mranderson048/re_frame/v0v10v2/re_frame/loggers.cljc"],[1596106403000,"^1Y",["^ ","^1Z",null,"^1[",["^F",[]],"^20",["^Z","^W","^P"]]],["~:macro","^W"],[1595322624000],["^26","~$mranderson048.reagent.v0v8v0.reagent.core"],[1596106403000],["^1K","mranderson048/re_frame/v0v10v2/re_frame/fx.cljc"],[1596106403000,"^1Y",["^ ","^1Z",null,"^1[",["^F",[]],"^20",["^Z","^W","^11","^[","^Y","^19","^17","^15","^V"]]],["^1K","goog/math/math.js"],[1596092743000,"^1Y",["^ ","^1Z",null,"^1[",["^F",[]],"^20",["^Z","~$goog.array","~$goog.asserts"]]],["^1K","goog/labs/useragent/browser.js"],[1596092743000,"^1Y",["^ ","^1Z",null,"^1[",["^F",[]],"^20",["^Z","^28","~$goog.labs.userAgent.util","~$goog.object","~$goog.string.internal"]]],["^1K","mranderson048/reagent/v0v8v0/reagent/core.cljs"],[1596106403000,"^1Y",["^ ","^1Z",null,"^1[",["^F",[]],"^20",["^Z","^W","^?","~$mranderson048.reagent.v0v8v0.reagent.impl.template","~$mranderson048.reagent.v0v8v0.reagent.impl.component","~$mranderson048.reagent.v0v8v0.reagent.impl.util","~$mranderson048.reagent.v0v8v0.reagent.impl.batching","~$mranderson048.reagent.v0v8v0.reagent.ratom","~$mranderson048.reagent.v0v8v0.reagent.debug","~$mranderson048.reagent.v0v8v0.reagent.interop","~$mranderson048.reagent.v0v8v0.reagent.dom"]]],["^1K","goog/array/array.js"],[1596092743000,"^1Y",["^ ","^1Z",null,"^1[",["^F",[]],"^20",["^Z","^29"]]],["^1X","node_modules/prop-types/checkPropTypes.js"],[1596092746000,1596092746000,1549836454000,"^1Y",["^ ","^1Z",null,"^1[",["^F",[]],"^20",["^21","~$module$node_modules$prop_types$lib$ReactPropTypesSecret","^24"]]],["^26","~$net.cgrand.macrovich"],[1552641581000],["^1X","node_modules/fbjs/lib/emptyFunction.js"],[1596092746000,1596092746000,1528785402000,"^1Y",["^ ","^1Z",null,"^1[",["^F",[]],"^20",["^21"]]],["^1K","goog/debug/error.js"],[1596092743000,"^1Y",["^ ","^1Z",null,"^1[",["^F",[]],"^20",["^Z"]]],["^1K","mranderson048/reagent/v0v8v0/reagent/dom.cljs"],[1596106403000,"^1Y",["^ ","^1Z",null,"^1[",["^F",[]],"^20",["^Z","^W","^C","^2?","^2=","^2@","^2A","^2B","^2C"]]],["^1K","mranderson048/reagent/v0v8v0/reagent/impl/component.cljs"],[1596106403000,"^1Y",["^ ","^1Z",null,"^1[",["^F",[]],"^20",["^Z","^W","^A","^?","^2?","^2@","^2A","^2C","^2B"]]],["^1X","node_modules/fbjs/lib/emptyObject.js"],[1596092746000,1596092746000,1528785402000,"^1Y",["^ ","^1Z",null,"^1[",["^F",[]],"^20",["^21","^24"]]],["^1K","goog/dom/nodetype.js"],[1596092743000,"^1Y",["^ ","^1Z",null,"^1[",["^F",[]],"^20",["^Z"]]],["^1K","mranderson048/re_frame/v0v10v2/re_frame/core.cljc"],[1596106403000,"^1Y",["^ ","^1Z",null,"^1[",["^F",[]],"^20",["^Z","^W","^17","^N","^19","^[","^T","^R","^11","^V","^15","^Y","^12","^P"]]],["^1X","node_modules/scheduler/cjs/scheduler.development.js"],[1596092746000,1596092746000,499162500000,"^1Y",["^ ","^1Z",null,"^1[",["^F",[]],"^20",["^21","^24"]]],["^1X","node_modules/scheduler/cjs/scheduler.production.min.js"],[1596092746000,1596092746000,499162500000,"^1Y",["^ ","^1Z",null,"^1[",["^F",[]],"^20",["^21"]]],["^1K","mranderson048/re_frame/v0v10v2/re_frame/std_interceptors.cljc"],[1596106403000,"^1Y",["^ ","^1Z",null,"^1[",["^F",[]],"^20",["^Z","^W","^Y","^V","^15","^[","~$clojure.data","^R","~$mranderson048.re-frame.v0v10v2.re-frame.utils"]]],["^1X","node_modules/scheduler/cjs/scheduler-tracing.production.min.js"],[1596092746000,1596092746000,499162500000,"^1Y",["^ ","^1Z",null,"^1[",["^F",[]],"^20",["^21"]]],["^1X","node_modules/create-react-class/factory.js"],[1596092746000,1596092746000,1517346959000,"^1Y",["^ ","^1Z",null,"^1[",["^F",[]],"^20",["^21","~$module$node_modules$object_assign$index","~$module$node_modules$fbjs$lib$emptyObject","~$module$node_modules$fbjs$lib$invariant","~$module$node_modules$fbjs$lib$warning","^24"]]],["^1X","node_modules/react/index.js"],[1596092746000,1596092746000,499162500000,"^1Y",["^ ","^1Z",null,"^1[",["^F",[]],"^20",["^21","~$module$node_modules$react$cjs$react_production_min","~$module$node_modules$react$cjs$react_development","^24"]]],["^1K","shadow/js.js"],[1596092746000,"^1Y",["^ ","^1Z",null,"^1[",["^F",[]],"^20",["^Z"]]],["^1K","goog/object/object.js"],[1596092743000,"^1Y",["^ ","^1Z",null,"^1[",["^F",[]],"^20",["^Z"]]],["^1X","node_modules/react-dom/cjs/react-dom.production.min.js"],[1596092746000,1596092746000,499162500000,"^1Y",["^ ","^1Z",null,"^1[",["^F",[]],"^20",["^21","^?","^2I","~$module$node_modules$scheduler$index"]]],"~:SHADOW-TIMESTAMP",[1596092746000,1595322624000],["^1X","node_modules/react/cjs/react.development.js"],[1596092746000,1596092746000,499162500000,"^1Y",["^ ","^1Z",null,"^1[",["^F",[]],"^20",["^21","^2I","~$module$node_modules$prop_types$checkPropTypes","^24"]]],["^26","^2C"],[1596106403000],["^1K","goog/math/long.js"],[1596092743000,"^1Y",["^ ","^1Z",null,"^1[",["^F",[]],"^20",["^Z","^29","~$goog.reflect"]]],["^1K","mranderson048/re_frame/v0v10v2/re_frame/subs.cljc"],[1596106403000,"^1Y",["^ ","^1Z",null,"^1[",["^F",[]],"^20",["^Z","^W","^[","^19","^V","^2H","^15","~$mranderson048.re-frame.v0v10v2.re-frame.trace"]]],["^1K","mranderson048/reagent/v0v8v0/reagent/impl/batching.cljs"],[1596106403000,"^1Y",["^ ","^1Z",null,"^1[",["^F",[]],"^20",["^Z","^W","^2B","^2C","^2?","~$clojure.string"]]],["^1K","goog/string/internal.js"],[1596092743000,"^1Y",["^ ","^1Z",null,"^1[",["^F",[]],"^20",["^Z"]]],["^1X","node_modules/scheduler/cjs/scheduler-tracing.development.js"],[1596092746000,1596092746000,499162500000,"^1Y",["^ ","^1Z",null,"^1[",["^F",[]],"^20",["^21","^24"]]],["^1K","mranderson048/re_frame/v0v10v2/re_frame/cofx.cljc"],[1596106403000,"^1Y",["^ ","^1Z",null,"^1[",["^F",[]],"^20",["^Z","^W","^[","^Y","^15","^V"]]],["^1X","node_modules/fbjs/lib/warning.js"],[1596092746000,1596092746000,1528785401000,"^1Y",["^ ","^1Z",null,"^1[",["^F",[]],"^20",["^21","~$module$node_modules$fbjs$lib$emptyFunction","^24"]]],["^1K","goog/functions/functions.js"],[1596092743000,"^1Y",["^ ","^1Z",null,"^1[",["^F",[]],"^20",["^Z"]]],["^1K","clojure/walk.cljs"],[1595322624000,"^1Y",["^ ","^1Z",null,"^1[",["^F",[]],"^20",["^Z","^W"]]],["^26","^2S"],[1596106403000],["^1K","goog/structs/map.js"],[1596092743000,"^1Y",["^ ","^1Z",null,"^1[",["^F",[]],"^20",["^Z","~$goog.iter.Iterator","~$goog.iter.StopIteration"]]],["^1K","mranderson048/re_frame/v0v10v2/re_frame/router.cljc"],[1596106403000,"^1Y",["^ ","^1Z",null,"^1[",["^F",[]],"^20",["^Z","^W","^17","^19","^V","^2S"]]],["^1X","node_modules/scheduler/index.js"],[1596092746000,1596092746000,499162500000,"^1Y",["^ ","^1Z",null,"^1[",["^F",[]],"^20",["^21","~$module$node_modules$scheduler$cjs$scheduler_production_min","~$module$node_modules$scheduler$cjs$scheduler_development","^24"]]],["^1K","goog/labs/useragent/engine.js"],[1596092743000,"^1Y",["^ ","^1Z",null,"^1[",["^F",[]],"^20",["^Z","^28","^2:","~$goog.string"]]],["^26","^2A"],[1596106403000],["^1K","goog/asserts/asserts.js"],[1596092743000,"^1Y",["^ ","^1Z",null,"^1[",["^F",[]],"^20",["^Z","~$goog.debug.Error","~$goog.dom.NodeType"]]],["^1K","goog/uri/uri.js"],[1596092743000,"^1Y",["^ ","^1Z",null,"^1[",["^F",[]],"^20",["^Z","^28","^29","^2Z","~$goog.structs","~$goog.structs.Map","~$goog.uri.utils","~$goog.uri.utils.ComponentIndex","~$goog.uri.utils.StandardQueryParam"]]],["^1K","mranderson048/reagent/v0v8v0/reagent/ratom.cljs"],[1596106403000,"^1Y",["^ ","^1Z",null,"^1[",["^F",[]],"^20",["^Z","^W","^2?","^2B","^2@","^P"]]],["^1K","mranderson048/reagent/v0v8v0/reagent/interop.cljs"],[1596106403000,"^1Y",["^ ","^1Z",null,"^1[",["^F",[]],"^20",["^Z","^W"]]],["^1K","mranderson048/re_frame/v0v10v2/re_frame/registrar.cljc"],[1596106403000,"^1Y",["^ ","^1Z",null,"^1[",["^F",[]],"^20",["^Z","^W","^19","^V"]]],["^1X","node_modules/object-assign/index.js"],[1596092746000,1596092746000,1484580833000,"^1Y",["^ ","^1Z",null,"^1[",["^F",[]],"^20",["^21"]]],["^1K","mranderson048/re_frame/v0v10v2/re_frame/events.cljc"],[1596106403000,"^1Y",["^ ","^1Z",null,"^1[",["^F",[]],"^20",["^Z","^W","^[","^2H","^19","^15","^V","^Y","^2S"]]],["^1X","node_modules/process/browser.js"],[1596092746000,1596092746000,1493209628000,"^1Y",["^ ","^1Z",null,"^1[",["^F",[]],"^20",["^21"]]],["^1K","goog/base.js"],[1596092743000,"^1Y",["^ ","^1Z",null,"^1[",["^F",[]],"^20",[]]],["^1K","goog/structs/structs.js"],[1596092743000,"^1Y",["^ ","^1Z",null,"^1[",["^F",[]],"^20",["^Z","^28","^2;"]]],["^1K","clojure/string.cljs"],[1595322624000,"^1Y",["^ ","^1Z",null,"^1[",["^F",[]],"^20",["^Z","^W","^2Z","~$goog.string.StringBuffer"]]],["^1X","node_modules/create-react-class/index.js"],[1596092746000,1596092746000,1517346956000,"^1Y",["^ ","^1Z",null,"^1[",["^F",[]],"^20",["^21","^?","~$module$node_modules$create_react_class$factory"]]],["^1K","mranderson048/re_frame/v0v10v2/re_frame/interceptor.cljc"],[1596106403000,"^1Y",["^ ","^1Z",null,"^1[",["^F",[]],"^20",["^Z","^W","^V","^19","^P"]]],["^1X","node_modules/react/cjs/react.production.min.js"],[1596092746000,1596092746000,499162500000,"^1Y",["^ ","^1Z",null,"^1[",["^F",[]],"^20",["^21","^2I"]]],["^1K","goog/debug/entrypointregistry.js"],[1596092743000,"^1Y",["^ ","^1Z",null,"^1[",["^F",[]],"^20",["^Z","^29"]]],["^1K","goog/string/string.js"],[1596092743000,"^1Y",["^ ","^1Z",null,"^1[",["^F",[]],"^20",["^Z","^2<"]]],["^1K","mranderson048/reagent/v0v8v0/reagent/impl/template.cljs"],[1596106403000,"^1Y",["^ ","^1Z",null,"^1[",["^F",[]],"^20",["^Z","^W","^?","^2T","~$clojure.walk","^2?","^2>","^2@","^2A","^2C","^2B"]]],["^1K","mranderson048/reagent/v0v8v0/reagent/impl/util.cljs"],[1596106403000,"^1Y",["^ ","^1Z",null,"^1[",["^F",[]],"^20",["^Z","^W","^2B","^2C","^2T"]]],["^1K","clojure/data.cljs"],[1595322624000,"^1Y",["^ ","^1Z",null,"^1[",["^F",[]],"^20",["^Z","^W","^P"]]],["^1K","goog/reflect/reflect.js"],[1596092743000,"^1Y",["^ ","^1Z",null,"^1[",["^F",[]],"^20",["^Z"]]],["^1K","goog/labs/useragent/util.js"],[1596092743000,"^1Y",["^ ","^1Z",null,"^1[",["^F",[]],"^20",["^Z","^2<"]]],["^1K","mranderson048/re_frame/v0v10v2/re_frame/trace.cljc"],[1596106403000,"^1Y",["^ ","^1Z",null,"^1[",["^F",[]],"^20",["^Z","^W","^19","^V"]]],["^1K","goog/string/stringbuffer.js"],[1596092743000,"^1Y",["^ ","^1Z",null,"^1[",["^F",[]],"^20",["^Z"]]],["^1K","goog/iter/iter.js"],[1596092743000,"^1Y",["^ ","^1Z",null,"^1[",["^F",[]],"^20",["^Z","^28","^29","~$goog.functions","~$goog.math"]]],["^1K","goog/async/nexttick.js"],[1596092743000,"^1Y",["^ ","^1Z",null,"^1[",["^F",[]],"^20",["^Z","~$goog.debug.entryPointRegistry","~$goog.dom.TagName","^39","~$goog.labs.userAgent.browser","~$goog.labs.userAgent.engine"]]],["^1X","node_modules/prop-types/lib/ReactPropTypesSecret.js"],[1596092746000,1596092746000,1549571078000,"^1Y",["^ ","^1Z",null,"^1[",["^F",[]],"^20",["^21"]]],["^1K","goog/dom/htmlelement.js"],[1596092743000,"^1Y",["^ ","^1Z",null,"^1[",["^F",[]],"^20",["^Z"]]],["^1K","cljs/core.cljs"],[1595322624000,"^1Y",["^ ","^1Z",null,"^1[",["^F",[]],"^20",["~$goog.math.Long","~$goog.math.Integer","^2Z","^2;","^28","~$goog.Uri","^36"]]],["^1K","goog/math/integer.js"],[1596092743000,"^1Y",["^ ","^1Z",null,"^1[",["^F",[]],"^20",["^Z"]]],["^1X","node_modules/scheduler/tracing.js"],[1596092746000,1596092746000,499162500000,"^1Y",["^ ","^1Z",null,"^1[",["^F",[]],"^20",["^21","~$module$node_modules$scheduler$cjs$scheduler_tracing_production_min","~$module$node_modules$scheduler$cjs$scheduler_tracing_development","^24"]]],["^1K","mranderson048/reagent/v0v8v0/reagent/debug.cljs"],[1596106403000,"^1Y",["^ ","^1Z",null,"^1[",["^F",[]],"^20",["^Z","^W"]]],["^1X","node_modules/react-dom/cjs/react-dom.development.js"],[1596092746000,1596092746000,499162500000,"^1Y",["^ ","^1Z",null,"^1[",["^F",[]],"^20",["^21","^?","^2I","^2O","^2Q","~$module$node_modules$scheduler$tracing","^24"]]],["^1K","clojure/set.cljs"],[1595322624000,"^1Y",["^ ","^1Z",null,"^1[",["^F",[]],"^20",["^Z","^W"]]],["^1K","goog/uri/utils.js"],[1596092743000,"^1Y",["^ ","^1Z",null,"^1[",["^F",[]],"^20",["^Z","^28","^29","^2Z"]]],["^1K","mranderson048/re_frame/v0v10v2/re_frame/interop.cljs"],[1596106403000,"^1Y",["^ ","^1Z",null,"^1[",["^F",[]],"^20",["^Z","^W","~$goog.async.nextTick","^27","^2A"]]],["^1K","mranderson048/re_frame/v0v10v2/re_frame/utils.cljc"],[1596106403000,"^1Y",["^ ","^1Z",null,"^1[",["^F",[]],"^20",["^Z","^W","^V"]]],["^1K","mranderson048/re_frame/v0v10v2/re_frame/db.cljc"],[1596106403000,"^1Y",["^ ","^1Z",null,"^1[",["^F",[]],"^20",["^Z","^W","^19"]]],["^1X","node_modules/fbjs/lib/invariant.js"],[1596092746000,1596092746000,1528785400000,"^1Y",["^ ","^1Z",null,"^1[",["^F",[]],"^20",["^21","^24"]]],["^26","^2B"],[1596106403000]]],"~:analyzer",["^ ","^3",null,"^4",["^ "],"^5",["^ ","^6","mranderson048/re_frame/v0v10v2/re_frame/core.cljc","^7",1,"^8",5,"^9",1,"^:",49],"^;",["^ ","^<","^=","^>","^?","^@","^A","^B","^C"],"^D",null,"^E",["^F",[]],"^G","^H","^K",null,"^L",["^ ","^M","^N","^O","^P","^Q","^R","^S","^T","^U","^V","^V","^V","^W","^W","^X","^Y","^Z","^Z","^[","^[","^10","^11","^12","^12","^13","^[","^14","^15","^Y","^Y","^15","^15","^P","^P","^16","^17","^R","^R","^11","^11","^N","^N","^T","^T","^17","^17","^18","^19","^1:","^12","^19","^19"],"^1;",["^F",["^1<"]],"~:shadow/js-access-global",["^F",["Error"]],"^1=",["^ ","^1>","^12","^1?","^12","^1@","^12"],"~:defs",["^ ","~$console",["^ ","^G","~$mranderson048.re-frame.v0v10v2.re-frame.core/console","^6","mranderson048/re_frame/v0v10v2/re_frame/core.cljc","^7",164,"^8",1,"^9",164,"^:",13,"^5",["^ ","^6","mranderson048/re_frame/v0v10v2/re_frame/core.cljc","^7",164,"^8",6,"^9",164,"^:",13]],"~$on-changes",["^ ","^G","~$mranderson048.re-frame.v0v10v2.re-frame.core/on-changes","^6","mranderson048/re_frame/v0v10v2/re_frame/core.cljc","^7",127,"^8",1,"^9",127,"^:",16,"^5",["^ ","^6","mranderson048/re_frame/v0v10v2/re_frame/core.cljc","^7",127,"^8",6,"^9",127,"^:",16]],"~$enrich",["^ ","^G","~$mranderson048.re-frame.v0v10v2.re-frame.core/enrich","^6","mranderson048/re_frame/v0v10v2/re_frame/core.cljc","^7",124,"^8",1,"^9",124,"^:",12,"^5",["^ ","^6","mranderson048/re_frame/v0v10v2/re_frame/core.cljc","^7",124,"^8",6,"^9",124,"^:",12]],"~$reg-sub-raw",["^ ","~:protocol-inline",null,"^5",["^ ","^6","mranderson048/re_frame/v0v10v2/re_frame/core.cljc","^7",51,"^8",7,"^9",51,"^:",18,"~:arglists",["^1C",["~$quote",["^1C",[["~$query-id","~$handler-fn"]]]]],"~:doc","This is a low level, advanced function.  You should probably be\n  using reg-sub instead.\n  Docs in https://github.com/Day8/re-frame/blob/master/docs/SubscriptionFlow.md"],"^G","~$mranderson048.re-frame.v0v10v2.re-frame.core/reg-sub-raw","^6","mranderson048/re_frame/v0v10v2/re_frame/core.cljc","^:",18,"~:method-params",["^1C",[["^3S","^3T"]]],"~:protocol-impl",null,"~:arglists-meta",["^1C",[null,null]],"^8",1,"~:variadic?",false,"^7",51,"~:ret-tag","~$any","^9",51,"~:max-fixed-arity",2,"~:fn-var",true,"^3Q",["^1C",["^3R",["^1C",[["^3S","^3T"]]]]],"^3U","This is a low level, advanced function.  You should probably be\n  using reg-sub instead.\n  Docs in https://github.com/Day8/re-frame/blob/master/docs/SubscriptionFlow.md"],"~$subscribe",["^ ","^G","~$mranderson048.re-frame.v0v10v2.re-frame.core/subscribe","^6","mranderson048/re_frame/v0v10v2/re_frame/core.cljc","^7",46,"^8",1,"^9",46,"^:",15,"^5",["^ ","^6","mranderson048/re_frame/v0v10v2/re_frame/core.cljc","^7",46,"^8",6,"^9",46,"^:",15]],"~$assoc-coeffect",["^ ","^G","~$mranderson048.re-frame.v0v10v2.re-frame.core/assoc-coeffect","^6","mranderson048/re_frame/v0v10v2/re_frame/core.cljc","^7",144,"^8",1,"^9",144,"^:",20,"^5",["^ ","^6","mranderson048/re_frame/v0v10v2/re_frame/core.cljc","^7",144,"^8",6,"^9",144,"^:",20]],"~$register-sub",["^ ","^3P",null,"^5",["^ ","^6","mranderson048/re_frame/v0v10v2/re_frame/core.cljc","^7",230,"^8",7,"^9",230,"^:",19,"^3Q",["^1C",["^3R",["^1C",[["~$&","~$args"]]]]],"~:top-fn",["^ ","^3Z",true,"~:fixed-arity",0,"^41",0,"^3W",[["^1C",["^48"]]],"^3Q",["^1C",[["~$&","^48"]]],"^3Y",["^1C",[null]]]],"^G","~$mranderson048.re-frame.v0v10v2.re-frame.core/register-sub","^6","mranderson048/re_frame/v0v10v2/re_frame/core.cljc","^:",19,"^49",["^ ","^3Z",true,"^4:",0,"^41",0,"^3W",[["^1C",["^48"]]],"^3Q",["^1C",[["~$&","^48"]]],"^3Y",["^1C",[null]]],"^3W",[["^1C",["^48"]]],"^3X",null,"^4:",0,"^3Y",["^1C",[null]],"^8",1,"^3Z",true,"~:methods",[["^ ","^4:",0,"^3Z",true,"~:tag","^40"]],"^7",230,"^3[","^40","^9",230,"^41",0,"^42",true,"^3Q",["^1C",[["~$&","^48"]]]],"~$remove-post-event-callback",["^ ","^3P",null,"^5",["^ ","^6","mranderson048/re_frame/v0v10v2/re_frame/core.cljc","^7",218,"^8",7,"^9",218,"^:",33,"^3Q",["^1C",["^3R",["^1C",[["~$id"]]]]]],"^G","~$mranderson048.re-frame.v0v10v2.re-frame.core/remove-post-event-callback","^6","mranderson048/re_frame/v0v10v2/re_frame/core.cljc","^:",33,"^3W",["^1C",[["^4?"]]],"^3X",null,"^3Y",["^1C",[null,null]],"^8",1,"^3Z",false,"^7",218,"^3[","^40","^9",218,"^41",1,"^42",true,"^3Q",["^1C",["^3R",["^1C",[["^4?"]]]]]],"~$path",["^ ","^G","~$mranderson048.re-frame.v0v10v2.re-frame.core/path","^6","mranderson048/re_frame/v0v10v2/re_frame/core.cljc","^7",123,"^8",1,"^9",123,"^:",10,"^5",["^ ","^6","mranderson048/re_frame/v0v10v2/re_frame/core.cljc","^7",123,"^8",6,"^9",123,"^:",10]],"~$reg-sub",["^ ","^G","~$mranderson048.re-frame.v0v10v2.re-frame.core/reg-sub","^6","mranderson048/re_frame/v0v10v2/re_frame/core.cljc","^7",45,"^8",1,"^9",45,"^:",13,"^5",["^ ","^6","mranderson048/re_frame/v0v10v2/re_frame/core.cljc","^7",45,"^8",6,"^9",45,"^:",13]],"~$make-restore-fn",["^ ","^3P",null,"^5",["^ ","^6","mranderson048/re_frame/v0v10v2/re_frame/core.cljc","^7",169,"^8",7,"^9",169,"^:",22,"^3Q",["^1C",["^3R",["^1C",[[]]]]],"^3U","Checkpoints the state of mranderson048.re-frame.v0v10v2.re-frame and returns a function which, when\n  later called, will restore mranderson048.re-frame.v0v10v2.re-frame to that checkpointed state.\n\n  Checkpoint includes app-db, all registered handlers and all subscriptions.\n  "],"^G","~$mranderson048.re-frame.v0v10v2.re-frame.core/make-restore-fn","^6","mranderson048/re_frame/v0v10v2/re_frame/core.cljc","^:",22,"^3W",["^1C",[[]]],"^3X",null,"^3Y",["^1C",[null,null]],"^8",1,"^3Z",false,"^7",169,"^3[","~$function","^9",169,"^41",0,"^42",true,"^3Q",["^1C",["^3R",["^1C",[[]]]]],"^3U","Checkpoints the state of mranderson048.re-frame.v0v10v2.re-frame and returns a function which, when\n  later called, will restore mranderson048.re-frame.v0v10v2.re-frame to that checkpointed state.\n\n  Checkpoint includes app-db, all registered handlers and all subscriptions.\n  "],"~$clear-fx",["^ ","^G","~$mranderson048.re-frame.v0v10v2.re-frame.core/clear-fx","^6","mranderson048/re_frame/v0v10v2/re_frame/core.cljc","^7",61,"^8",1,"^9",61,"^:",14,"^5",["^ ","^6","mranderson048/re_frame/v0v10v2/re_frame/core.cljc","^7",61,"^8",6,"^9",61,"^:",14],"^4=","^4G"],"~$get-effect",["^ ","^G","~$mranderson048.re-frame.v0v10v2.re-frame.core/get-effect","^6","mranderson048/re_frame/v0v10v2/re_frame/core.cljc","^7",145,"^8",1,"^9",145,"^:",16,"^5",["^ ","^6","mranderson048/re_frame/v0v10v2/re_frame/core.cljc","^7",145,"^8",6,"^9",145,"^:",16]],"~$reg-event-db",["^ ","^3P",null,"^5",["^ ","^6","mranderson048/re_frame/v0v10v2/re_frame/core.cljc","^7",71,"^8",7,"^9",71,"^:",19,"^3Q",["^1C",["^3R",["^1C",[["^4?","~$handler"],["^4?","~$interceptors","^4M"]]]]],"^3U","Register the given event `handler` (function) for the given `id`. Optionally, provide\n  an `interceptors` chain.\n  `id` is typically a namespaced keyword  (but can be anything)\n  `handler` is a function: (db event) -> db\n  `interceptors` is a collection of interceptors. Will be flattened and nils removed.\n  `handler` is wrapped in its own interceptor and added to the end of the interceptor\n   chain, so that, in the end, only a chain is registered.\n   Special effects and coeffects interceptors are added to the front of this\n   chain.","^49",["^ ","^3Z",false,"^4:",3,"^41",3,"^3W",["^1C",[["^4?","^4M"],["^4?","^4N","^4M"]]],"^3Q",["^1C",[["^4?","^4M"],["^4?","^4N","^4M"]]],"^3Y",["^1C",[null,null]]]],"^G","~$mranderson048.re-frame.v0v10v2.re-frame.core/reg-event-db","^6","mranderson048/re_frame/v0v10v2/re_frame/core.cljc","^:",19,"^49",["^ ","^3Z",false,"^4:",3,"^41",3,"^3W",["^1C",[["^4?","^4M"],["^4?","^4N","^4M"]]],"^3Q",["^1C",[["^4?","^4M"],["^4?","^4N","^4M"]]],"^3Y",["^1C",[null,null]]],"^3W",["^1C",[["^4?","^4M"],["^4?","^4N","^4M"]]],"^3X",null,"^4:",3,"^3Y",["^1C",[null,null]],"^8",1,"^3Z",false,"^4<",[["^ ","^4:",2,"^3Z",false,"^4=","^40"],["^ ","^4:",3,"^3Z",false,"^4=","^40"]],"^7",71,"^9",71,"^41",3,"^42",true,"^3Q",["^1C",[["^4?","^4M"],["^4?","^4N","^4M"]]],"^3U","Register the given event `handler` (function) for the given `id`. Optionally, provide\n  an `interceptors` chain.\n  `id` is typically a namespaced keyword  (but can be anything)\n  `handler` is a function: (db event) -> db\n  `interceptors` is a collection of interceptors. Will be flattened and nils removed.\n  `handler` is wrapped in its own interceptor and added to the end of the interceptor\n   chain, so that, in the end, only a chain is registered.\n   Special effects and coeffects interceptors are added to the front of this\n   chain."],"~$dispatch-sync",["^ ","^G","~$mranderson048.re-frame.v0v10v2.re-frame.core/dispatch-sync","^6","mranderson048/re_frame/v0v10v2/re_frame/core.cljc","^7",41,"^8",1,"^9",41,"^:",19,"^5",["^ ","^6","mranderson048/re_frame/v0v10v2/re_frame/core.cljc","^7",41,"^8",6,"^9",41,"^:",19]],"~$clear-event",["^ ","^G","~$mranderson048.re-frame.v0v10v2.re-frame.core/clear-event","^6","mranderson048/re_frame/v0v10v2/re_frame/core.cljc","^7",116,"^8",1,"^9",116,"^:",17,"^5",["^ ","^6","mranderson048/re_frame/v0v10v2/re_frame/core.cljc","^7",116,"^8",6,"^9",116,"^:",17],"^4=","^4G"],"~$->interceptor",["^ ","^G","~$mranderson048.re-frame.v0v10v2.re-frame.core/->interceptor","^6","mranderson048/re_frame/v0v10v2/re_frame/core.cljc","^7",142,"^8",1,"^9",142,"^:",19,"^5",["^ ","^6","mranderson048/re_frame/v0v10v2/re_frame/core.cljc","^7",142,"^8",6,"^9",142,"^:",19]],"~$set-loggers!",["^ ","^G","~$mranderson048.re-frame.v0v10v2.re-frame.core/set-loggers!","^6","mranderson048/re_frame/v0v10v2/re_frame/core.cljc","^7",157,"^8",1,"^9",157,"^:",18,"^5",["^ ","^6","mranderson048/re_frame/v0v10v2/re_frame/core.cljc","^7",157,"^8",6,"^9",157,"^:",18]],"~$inject-cofx",["^ ","^G","~$mranderson048.re-frame.v0v10v2.re-frame.core/inject-cofx","^6","mranderson048/re_frame/v0v10v2/re_frame/core.cljc","^7",65,"^8",1,"^9",65,"^:",17,"^5",["^ ","^6","mranderson048/re_frame/v0v10v2/re_frame/core.cljc","^7",65,"^8",6,"^9",65,"^:",17]],"~$get-coeffect",["^ ","^G","~$mranderson048.re-frame.v0v10v2.re-frame.core/get-coeffect","^6","mranderson048/re_frame/v0v10v2/re_frame/core.cljc","^7",143,"^8",1,"^9",143,"^:",18,"^5",["^ ","^6","mranderson048/re_frame/v0v10v2/re_frame/core.cljc","^7",143,"^8",6,"^9",143,"^:",18]],"~$debug",["^ ","^G","~$mranderson048.re-frame.v0v10v2.re-frame.core/debug","^6","mranderson048/re_frame/v0v10v2/re_frame/core.cljc","^7",122,"^8",1,"^9",122,"^:",11,"^5",["^ ","^6","mranderson048/re_frame/v0v10v2/re_frame/core.cljc","^7",122,"^8",6,"^9",122,"^:",11],"^4=","~$cljs.core/IMap"],"~$assoc-effect",["^ ","^G","~$mranderson048.re-frame.v0v10v2.re-frame.core/assoc-effect","^6","mranderson048/re_frame/v0v10v2/re_frame/core.cljc","^7",146,"^8",1,"^9",146,"^:",18,"^5",["^ ","^6","mranderson048/re_frame/v0v10v2/re_frame/core.cljc","^7",146,"^8",6,"^9",146,"^:",18]],"~$enqueue",["^ ","^G","~$mranderson048.re-frame.v0v10v2.re-frame.core/enqueue","^6","mranderson048/re_frame/v0v10v2/re_frame/core.cljc","^7",147,"^8",1,"^9",147,"^:",13,"^5",["^ ","^6","mranderson048/re_frame/v0v10v2/re_frame/core.cljc","^7",147,"^8",6,"^9",147,"^:",13]],"~$clear-cofx",["^ ","^G","~$mranderson048.re-frame.v0v10v2.re-frame.core/clear-cofx","^6","mranderson048/re_frame/v0v10v2/re_frame/core.cljc","^7",66,"^8",1,"^9",66,"^:",16,"^5",["^ ","^6","mranderson048/re_frame/v0v10v2/re_frame/core.cljc","^7",66,"^8",6,"^9",66,"^:",16],"^4=","^4G"],"~$reg-event-ctx",["^ ","^3P",null,"^5",["^ ","^6","mranderson048/re_frame/v0v10v2/re_frame/core.cljc","^7",104,"^8",7,"^9",104,"^:",20,"^3Q",["^1C",["^3R",["^1C",[["^4?","^4M"],["^4?","^4N","^4M"]]]]],"^3U","Register the given event `handler` (function) for the given `id`. Optionally, provide\n  an `interceptors` chain.\n  `id` is typically a namespaced keyword  (but can be anything)\n  `handler` is a function: (context-map event-vector) -> context-map\n\n  This form of registration is almost never used. ","^49",["^ ","^3Z",false,"^4:",3,"^41",3,"^3W",["^1C",[["^4?","^4M"],["^4?","^4N","^4M"]]],"^3Q",["^1C",[["^4?","^4M"],["^4?","^4N","^4M"]]],"^3Y",["^1C",[null,null]]]],"^G","~$mranderson048.re-frame.v0v10v2.re-frame.core/reg-event-ctx","^6","mranderson048/re_frame/v0v10v2/re_frame/core.cljc","^:",20,"^49",["^ ","^3Z",false,"^4:",3,"^41",3,"^3W",["^1C",[["^4?","^4M"],["^4?","^4N","^4M"]]],"^3Q",["^1C",[["^4?","^4M"],["^4?","^4N","^4M"]]],"^3Y",["^1C",[null,null]]],"^3W",["^1C",[["^4?","^4M"],["^4?","^4N","^4M"]]],"^3X",null,"^4:",3,"^3Y",["^1C",[null,null]],"^8",1,"^3Z",false,"^4<",[["^ ","^4:",2,"^3Z",false,"^4=","^40"],["^ ","^4:",3,"^3Z",false,"^4=","^40"]],"^7",104,"^9",104,"^41",3,"^42",true,"^3Q",["^1C",[["^4?","^4M"],["^4?","^4N","^4M"]]],"^3U","Register the given event `handler` (function) for the given `id`. Optionally, provide\n  an `interceptors` chain.\n  `id` is typically a namespaced keyword  (but can be anything)\n  `handler` is a function: (context-map event-vector) -> context-map\n\n  This form of registration is almost never used. "],"~$reg-fx",["^ ","^G","~$mranderson048.re-frame.v0v10v2.re-frame.core/reg-fx","^6","mranderson048/re_frame/v0v10v2/re_frame/core.cljc","^7",60,"^8",1,"^9",60,"^:",12,"^5",["^ ","^6","mranderson048/re_frame/v0v10v2/re_frame/core.cljc","^7",60,"^8",6,"^9",60,"^:",12]],"~$trim-v",["^ ","^G","~$mranderson048.re-frame.v0v10v2.re-frame.core/trim-v","^6","mranderson048/re_frame/v0v10v2/re_frame/core.cljc","^7",125,"^8",1,"^9",125,"^:",12,"^5",["^ ","^6","mranderson048/re_frame/v0v10v2/re_frame/core.cljc","^7",125,"^8",6,"^9",125,"^:",12],"^4=","^52"],"~$clear-sub",["^ ","^G","~$mranderson048.re-frame.v0v10v2.re-frame.core/clear-sub","^6","mranderson048/re_frame/v0v10v2/re_frame/core.cljc","^7",48,"^8",1,"^9",48,"^:",15,"^5",["^ ","^6","mranderson048/re_frame/v0v10v2/re_frame/core.cljc","^7",48,"^8",6,"^9",48,"^:",15],"^4=","^4G"],"~$dispatch",["^ ","^G","~$mranderson048.re-frame.v0v10v2.re-frame.core/dispatch","^6","mranderson048/re_frame/v0v10v2/re_frame/core.cljc","^7",40,"^8",1,"^9",40,"^:",14,"^5",["^ ","^6","mranderson048/re_frame/v0v10v2/re_frame/core.cljc","^7",40,"^8",6,"^9",40,"^:",14]],"~$after",["^ ","^G","~$mranderson048.re-frame.v0v10v2.re-frame.core/after","^6","mranderson048/re_frame/v0v10v2/re_frame/core.cljc","^7",126,"^8",1,"^9",126,"^:",11,"^5",["^ ","^6","mranderson048/re_frame/v0v10v2/re_frame/core.cljc","^7",126,"^8",6,"^9",126,"^:",11]],"~$add-post-event-callback",["^ ","^3P",null,"^5",["^ ","^6","mranderson048/re_frame/v0v10v2/re_frame/core.cljc","^7",197,"^8",7,"^9",197,"^:",30,"^3Q",["^1C",["^3R",["^1C",[["~$f"],["^4?","~$f"]]]]],"^3U","Registers a function `f` to be called after each event is processed\n   `f` will be called with two arguments:\n    - `event`: a vector. The event just processed.\n    - `queue`: a PersistentQueue, possibly empty, of events yet to be processed.\n\n   This is useful in advanced cases like:\n     - you are implementing a complex bootstrap pipeline\n     - you want to create your own handling infrastructure, with perhaps multiple\n       handlers for the one event, etc.  Hook in here.\n     - libraries providing 'isomorphic javascript' rendering on  Nodejs or Nashorn.\n\n  'id' is typically a keyword. Supplied at \"add time\" so it can subsequently\n  be used at \"remove time\" to get rid of the right callback.\n  ","^49",["^ ","^3Z",false,"^4:",2,"^41",2,"^3W",["^1C",[["~$f"],["^4?","~$f"]]],"^3Q",["^1C",[["~$f"],["^4?","~$f"]]],"^3Y",["^1C",[null,null]]]],"^G","~$mranderson048.re-frame.v0v10v2.re-frame.core/add-post-event-callback","^6","mranderson048/re_frame/v0v10v2/re_frame/core.cljc","^:",30,"^49",["^ ","^3Z",false,"^4:",2,"^41",2,"^3W",["^1C",[["~$f"],["^4?","~$f"]]],"^3Q",["^1C",[["~$f"],["^4?","~$f"]]],"^3Y",["^1C",[null,null]]],"^3W",["^1C",[["~$f"],["^4?","~$f"]]],"^3X",null,"^4:",2,"^3Y",["^1C",[null,null]],"^8",1,"^3Z",false,"^4<",[["^ ","^4:",1,"^3Z",false,"^4=","^40"],["^ ","^4:",2,"^3Z",false,"^4=","^40"]],"^7",197,"^9",197,"^41",2,"^42",true,"^3Q",["^1C",[["~$f"],["^4?","~$f"]]],"^3U","Registers a function `f` to be called after each event is processed\n   `f` will be called with two arguments:\n    - `event`: a vector. The event just processed.\n    - `queue`: a PersistentQueue, possibly empty, of events yet to be processed.\n\n   This is useful in advanced cases like:\n     - you are implementing a complex bootstrap pipeline\n     - you want to create your own handling infrastructure, with perhaps multiple\n       handlers for the one event, etc.  Hook in here.\n     - libraries providing 'isomorphic javascript' rendering on  Nodejs or Nashorn.\n\n  'id' is typically a keyword. Supplied at \"add time\" so it can subsequently\n  be used at \"remove time\" to get rid of the right callback.\n  "],"~$reg-cofx",["^ ","^G","~$mranderson048.re-frame.v0v10v2.re-frame.core/reg-cofx","^6","mranderson048/re_frame/v0v10v2/re_frame/core.cljc","^7",64,"^8",1,"^9",64,"^:",14,"^5",["^ ","^6","mranderson048/re_frame/v0v10v2/re_frame/core.cljc","^7",64,"^8",6,"^9",64,"^:",14]],"~$reg-event-fx",["^ ","^3P",null,"^5",["^ ","^6","mranderson048/re_frame/v0v10v2/re_frame/core.cljc","^7",87,"^8",7,"^9",87,"^:",19,"^3Q",["^1C",["^3R",["^1C",[["^4?","^4M"],["^4?","^4N","^4M"]]]]],"^3U","Register the given event `handler` (function) for the given `id`. Optionally, provide\n  an `interceptors` chain.\n  `id` is typically a namespaced keyword  (but can be anything)\n  `handler` is a function: (coeffects-map event-vector) -> effects-map\n  `interceptors` is a collection of interceptors. Will be flattened and nils removed.\n  `handler` is wrapped in its own interceptor and added to the end of the interceptor\n   chain, so that, in the end, only a chain is registered.\n   Special effects and coeffects interceptors are added to the front of the\n   interceptor chain.  These interceptors inject the value of app-db into coeffects,\n   and, later, action effects.","^49",["^ ","^3Z",false,"^4:",3,"^41",3,"^3W",["^1C",[["^4?","^4M"],["^4?","^4N","^4M"]]],"^3Q",["^1C",[["^4?","^4M"],["^4?","^4N","^4M"]]],"^3Y",["^1C",[null,null]]]],"^G","~$mranderson048.re-frame.v0v10v2.re-frame.core/reg-event-fx","^6","mranderson048/re_frame/v0v10v2/re_frame/core.cljc","^:",19,"^49",["^ ","^3Z",false,"^4:",3,"^41",3,"^3W",["^1C",[["^4?","^4M"],["^4?","^4N","^4M"]]],"^3Q",["^1C",[["^4?","^4M"],["^4?","^4N","^4M"]]],"^3Y",["^1C",[null,null]]],"^3W",["^1C",[["^4?","^4M"],["^4?","^4N","^4M"]]],"^3X",null,"^4:",3,"^3Y",["^1C",[null,null]],"^8",1,"^3Z",false,"^4<",[["^ ","^4:",2,"^3Z",false,"^4=","^40"],["^ ","^4:",3,"^3Z",false,"^4=","^40"]],"^7",87,"^9",87,"^41",3,"^42",true,"^3Q",["^1C",[["^4?","^4M"],["^4?","^4N","^4M"]]],"^3U","Register the given event `handler` (function) for the given `id`. Optionally, provide\n  an `interceptors` chain.\n  `id` is typically a namespaced keyword  (but can be anything)\n  `handler` is a function: (coeffects-map event-vector) -> effects-map\n  `interceptors` is a collection of interceptors. Will be flattened and nils removed.\n  `handler` is wrapped in its own interceptor and added to the end of the interceptor\n   chain, so that, in the end, only a chain is registered.\n   Special effects and coeffects interceptors are added to the front of the\n   interceptor chain.  These interceptors inject the value of app-db into coeffects,\n   and, later, action effects."],"~$register-handler",["^ ","^3P",null,"^5",["^ ","^6","mranderson048/re_frame/v0v10v2/re_frame/core.cljc","^7",225,"^8",7,"^9",225,"^:",23,"^3Q",["^1C",["^3R",["^1C",[["~$&","^48"]]]]],"^49",["^ ","^3Z",true,"^4:",0,"^41",0,"^3W",[["^1C",["^48"]]],"^3Q",["^1C",[["~$&","^48"]]],"^3Y",["^1C",[null]]]],"^G","~$mranderson048.re-frame.v0v10v2.re-frame.core/register-handler","^6","mranderson048/re_frame/v0v10v2/re_frame/core.cljc","^:",23,"^49",["^ ","^3Z",true,"^4:",0,"^41",0,"^3W",[["^1C",["^48"]]],"^3Q",["^1C",[["~$&","^48"]]],"^3Y",["^1C",[null]]],"^3W",[["^1C",["^48"]]],"^3X",null,"^4:",0,"^3Y",["^1C",[null]],"^8",1,"^3Z",true,"^4<",[["^ ","^4:",0,"^3Z",true,"^4=","^40"]],"^7",225,"^3[","^40","^9",225,"^41",0,"^42",true,"^3Q",["^1C",[["~$&","^48"]]]],"~$clear-subscription-cache!",["^ ","^G","~$mranderson048.re-frame.v0v10v2.re-frame.core/clear-subscription-cache!","^6","mranderson048/re_frame/v0v10v2/re_frame/core.cljc","^7",49,"^8",1,"^9",49,"^:",31,"^5",["^ ","^6","mranderson048/re_frame/v0v10v2/re_frame/core.cljc","^7",49,"^8",6,"^9",49,"^:",31]]],"^1A",["^ ","^W","^W"],"~:cljs.analyzer/constants",["^ ","^1;",["^F",["~:warn"]],"~:order",["^5P"]],"^1G",["^ ","^1<",["^F",[]]],"^1H",["^ "],"^1I",["^Z","^W","^17","^N","^19","^[","^T","^R","^11","^V","^15","^Y","^12","^P"]],"^J","^H","~:ns-specs",["^ "],"~:ns-speced-vars",[],"~:compiler-options",["^1W",[["^5T","~:static-fns"],true,["^5T","~:elide-asserts"],false,["^5T","~:optimize-constants"],null,["^5T","^1N"],null,["^5T","~:external-config"],null,["^5T","~:tooling-config"],null,["^5T","~:emit-constants"],null,["^5T","~:load-tests"],null,["^5T","~:infer-externs"],true,["^5T","^1P"],null,["~:js-options","~:js-provider"],"~:shadow",["~:mode"],"~:dev",["^5T","~:fn-invoke-direct"],null,["^5T","~:source-map"],"/dev/null"]]]